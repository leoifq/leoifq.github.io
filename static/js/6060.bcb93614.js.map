{"version":3,"file":"static/js/6060.bcb93614.js","mappings":"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","sources":["webpack://cocogoat-web/./src/store/providers/onedrive/Manage.vue?bcc2","webpack://cocogoat-web/./src/store/providers/onedrive/Manage.vue","webpack://cocogoat-web/./src/store/providers/onedrive/Manage.vue?3a2d","webpack://cocogoat-web/./src/store/providers/onedrive/Manage.vue?e2bf","webpack://cocogoat-web/./node_modules/.pnpm/ifdef-loader@2.3.2/node_modules/ifdef-loader/ifdef-loader.js","webpack://cocogoat-web/./node_modules/.pnpm/js-base64@3.7.2/node_modules/js-base64/base64.mjs"],"sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"logo\"\n};\nconst _hoisted_2 = {\n  class: \"content\"\n};\nconst _hoisted_3 = {\n  class: \"title\"\n};\nconst _hoisted_4 = {\n  class: \"username\"\n};\nconst _hoisted_5 = {\n  class: \"status\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_fa_icon = _resolveComponent(\"fa-icon\");\n\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(_ctx.$style.syncItemMsft)\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_fa_icon, {\n    icon: ['fab', 'microsoft']\n  })]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, \"OneDrive - \" + _toDisplayString(_ctx.provider.name), 1), _createElementVNode(\"div\", _hoisted_5, _toDisplayString(_ctx.provider.user), 1)])])], 2);\n}","import { faMicrosoft } from '@fortawesome/free-brands-svg-icons';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nlibrary.add(faMicrosoft);\nimport { defineComponent } from 'vue';\nexport default defineComponent({\n  props: {\n    provider: {\n      type: Object,\n      required: true\n    }\n  },\n\n  setup() {\n    return {};\n  }\n\n});","/* unplugin-vue-components disabled */// extracted by mini-css-extract-plugin\nexport default {\"syncItemMsft\":\"syncItemMsft-dbda1e\"};","/* unplugin-vue-components disabled */import { render } from \"./Manage.vue?vue&type=template&id=702ea4a0&ts=true\"\nimport script from \"./Manage.vue?vue&type=script&lang=ts\"\nexport * from \"./Manage.vue?vue&type=script&lang=ts\"\n\nconst cssModules = {}\nimport style0 from \"./Manage.vue?vue&type=style&index=0&id=702ea4a0&lang=scss&module=true\"\ncssModules[\"$style\"] = style0\n\nimport exportComponent from \"/home/runner/work/cocogoat/cocogoat/node_modules/.pnpm/vue-loader@17.0.0_webpack@5.73.0/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__cssModules',cssModules]])\n\nexport default __exports__","import { apibase } from '@/utils/apibase'\nimport { markRaw } from 'vue'\nimport { decode } from 'js-base64'\nimport Manage from './Manage.vue'\nimport { SyncProvider } from '../typing'\nimport { SYNCERR, SyncError } from '@/store/sync'\ninterface IMsToken {\n    access_token: string\n    expires_in: number\n    id_token: string\n    refresh_token: string\n    scope: string\n    token_type: string\n    last_updated: number\n}\nclass OneDriveSyncProvider implements SyncProvider {\n    component = markRaw(Manage)\n    data: IMsToken\n    name = ''\n    user = ''\n    constructor(data: IMsToken) {\n        this.data = data\n        const idToken = data.id_token\n        const idTokenData = JSON.parse(decode(idToken.split('.')[1]))\n        this.name = idTokenData.name\n        this.user = idTokenData.preferred_username\n    }\n    async enabled() {\n        return { enabled: true, reason: '' }\n    }\n    async refreshToken() {\n        if (Date.now() - this.data.last_updated < this.data.expires_in * 1000) {\n            return\n        }\n        const res = await fetch(await apibase('/v2/aether/microsoft'), {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                refresh_token: this.data.refresh_token,\n            }),\n        })\n        try {\n            if (res.status === 200) {\n                const token = await res.json()\n                if (token.refresh_token && token.access_token) {\n                    const idToken = token.id_token\n                    Object.assign(this.data, token)\n                    this.data.id_token = idToken\n                    this.data.last_updated = Date.now()\n                    console.log('SYNC-ONEDRIVE', 'Token Refreshed')\n                }\n            }\n        } catch (e) {}\n    }\n    async info(): Promise<{ user: string; name: string; avatar: string; storage: number[] }> {\n        return {\n            user: 'debug',\n            name: 'debug',\n            avatar: '',\n            storage: [0, 0],\n        }\n    }\n    async set(\n        key: string,\n        value: unknown,\n        { localLast, localNow, forceOverride }: { localLast: Date; localNow: Date; forceOverride?: true },\n    ): Promise<{\n        value: unknown\n        lastModified: Date\n    }> {\n        await this.refreshToken()\n        const fileUrl = `https://graph.microsoft.com/beta/me/drive/special/approot:/${key}.json`\n        if (!forceOverride && localLast.getTime() > 0 && value !== null) {\n            const remoteFileRes = await fetch(fileUrl, {\n                method: 'GET',\n                headers: {\n                    Authorization: `Bearer ${this.data.access_token}`,\n                },\n            })\n            if (remoteFileRes.status === 200) {\n                const remoteFile = await remoteFileRes.json()\n                const lastModified = new Date(remoteFile.lastModifiedDateTime)\n                if (lastModified > localLast) {\n                    throw new SyncError(SYNCERR.CONFLICT, 'conflict when saving [' + key + ']', {\n                        remoteLast: lastModified,\n                        localLast,\n                        localNow,\n                        key,\n                    })\n                }\n            }\n        }\n        const fileData = {\n            value: value,\n            lastModified: localNow.toISOString(),\n        }\n        const res = await fetch(\n            `${fileUrl}${value === null ? '' : ':/content'}?@microsoft.graph.conflictBehavior=replace`,\n            {\n                method: value === null ? 'DELETE' : 'PUT',\n                headers: {\n                    Authorization: `Bearer ${this.data.access_token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: value === null ? undefined : JSON.stringify(fileData, null, 4),\n            },\n        )\n        const t = await res.text()\n        if (res.status === 200 || res.status === 201 || res.status === 204 || res.status === 404) {\n            return {\n                value,\n                lastModified: localNow,\n            }\n        }\n        throw new SyncError(SYNCERR.OTHER, 'OneDrive Sync Faild', t)\n    }\n    async get(key: string): Promise<{\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        value: any\n        lastModified: Date\n    }> {\n        await this.refreshToken()\n        const fileUrl = `https://graph.microsoft.com/beta/me/drive/special/approot:/${key}.json:/content`\n        const remoteFileRes = await fetch(fileUrl, {\n            method: 'GET',\n            headers: {\n                Authorization: `Bearer ${this.data.access_token}`,\n            },\n        })\n        if (remoteFileRes.status === 404) {\n            // 首次同步\n            return {\n                value: null,\n                lastModified: new Date(0),\n            }\n        }\n        if (remoteFileRes.status === 200) {\n            try {\n                const remoteFile = await remoteFileRes.json()\n                return remoteFile\n            } catch (e) {\n                return {\n                    value: null,\n                    lastModified: new Date(0),\n                }\n            }\n        }\n        const resText = await remoteFileRes.text()\n        throw new SyncError(SYNCERR.OTHER, 'OneDrive Sync Faild', {\n            status: remoteFileRes.status,\n            data: resText,\n        })\n    }\n    async loadAll(): Promise<Record<string, { value: unknown; lastModified: Date }>> {\n        await this.refreshToken()\n        const childrenUrl = `https://graph.microsoft.com/beta/me/drive/special/approot/children`\n        const res = await fetch(childrenUrl, {\n            method: 'GET',\n            headers: {\n                Authorization: `Bearer ${this.data.access_token}`,\n            },\n        })\n        if (res.status === 200) {\n            const children = await res.json()\n            const result: Record<string, { value: unknown; lastModified: Date }> = {}\n            for (const child of children.value) {\n                if (!child.name.endsWith('.json')) {\n                    continue\n                }\n                const fileUrl = `https://graph.microsoft.com/beta/me/drive/special/approot:/${child.name}:/content`\n                const remoteFileRes = await fetch(fileUrl, {\n                    method: 'GET',\n                    headers: {\n                        Authorization: `Bearer ${this.data.access_token}`,\n                    },\n                })\n                try {\n                    if (remoteFileRes.status === 200) {\n                        const remoteFile = await remoteFileRes.json()\n                        remoteFile.lastModified = new Date(remoteFile.lastModified)\n                        const fileKey = child.name.substr(0, child.name.length - 5)\n                        result[fileKey] = remoteFile\n                    }\n                } catch (e) {\n                    console.log(e)\n                }\n            }\n            return result\n        }\n        throw new SyncError(SYNCERR.OTHER, 'OneDrive Sync Faild', {\n            status: res.status,\n            data: await res.text(),\n        })\n    }\n}\nexport default OneDriveSyncProvider\n","/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.2';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasatob = typeof atob === 'function';\nconst _hasbtoa = typeof btoa === 'function';\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it, fn = (x) => x) => new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = _hasbtoa ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = _hasatob ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a), c => c.charCodeAt(0));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins,\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n"],"names":["_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","render","_ctx","_cache","$props","$setup","$data","$options","_component_fa_icon","$style","syncItemMsft","_","icon","provider","name","user","props","type","Object","required","setup","cssModules","__exports__","OneDriveSyncProvider","constructor","data","markRaw","Manage","this","idToken","id_token","idTokenData","JSON","parse","decode","split","preferred_username","enabled","reason","Date","now","last_updated","expires_in","res","fetch","apibase","method","headers","body","stringify","refresh_token","status","token","json","access_token","assign","console","log","e","avatar","storage","key","value","localLast","localNow","forceOverride","refreshToken","fileUrl","getTime","remoteFileRes","Authorization","remoteFile","lastModified","lastModifiedDateTime","SyncError","SYNCERR","remoteLast","fileData","toISOString","undefined","t","text","resText","childrenUrl","children","result","child","endsWith","fileKey","substr","length","apis","global","process","cn","apiregion","navigator","language","startsWith","apistatus","ref","apicolor","syncstatus","regionchecked","path","region","checkRegion","url","ok","rjson","msg","typ","smsg","error","_hasatob","atob","_hasBuffer","Buffer","_TD","TextDecoder","b64ch","TextEncoder","b64chs","Array","prototype","slice","call","b64tab","a","tab","forEach","c","i","b64re","_fromCC","String","fromCharCode","bind","_U8Afrom","Uint8Array","from","it","fn","x","map","_tidyB64","s","replace","re_btou","cb_btou","cccc","cp","charCodeAt","offset","btou","b","atobPolyfill","asc","test","TypeError","u24","r1","r2","bin","charAt","_atob","toString","_toUint8Array","_decode","_unURI","m0","src"],"sourceRoot":""}