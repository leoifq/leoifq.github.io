{"version":3,"file":"static/js/4153.a5fe7970.js","mappings":"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","sources":["webpack://cocogoat-web/../../../src/flags.ts","webpack://cocogoat-web/../../src/promisebuffer.ts","webpack://cocogoat-web/../../src/clientreport.ts","webpack://cocogoat-web/../../src/status.ts","webpack://cocogoat-web/../../src/ratelimit.ts","webpack://cocogoat-web/../../../../src/transports/base.ts","webpack://cocogoat-web/../../src/async.ts","webpack://cocogoat-web/../../../../src/transports/utils.ts","webpack://cocogoat-web/../../src/api.ts","webpack://cocogoat-web/../../src/memo.ts","webpack://cocogoat-web/../../src/stacktrace.ts","webpack://cocogoat-web/../../src/normalize.ts","webpack://cocogoat-web/../../src/request.ts","webpack://cocogoat-web/../../src/dsn.ts","webpack://cocogoat-web/../../src/envelope.ts","webpack://cocogoat-web/../../src/polyfill.ts","webpack://cocogoat-web/../../src/error.ts","webpack://cocogoat-web/../../src/flags.ts","webpack://cocogoat-web/../../src/global.ts","webpack://cocogoat-web/../../src/is.ts","webpack://cocogoat-web/../../src/logger.ts","webpack://cocogoat-web/../../src/env.ts","webpack://cocogoat-web/../../src/node.ts","webpack://cocogoat-web/../../src/browser.ts","webpack://cocogoat-web/../../src/object.ts","webpack://cocogoat-web/../../src/supports.ts","webpack://cocogoat-web/../../src/syncpromise.ts","webpack://cocogoat-web/../../src/time.ts","webpack://cocogoat-web/../../src/components.ts","webpack://cocogoat-web/../../src/constants.ts","webpack://cocogoat-web/../../src/errorhandler.ts","webpack://cocogoat-web/../../src/router.ts","webpack://cocogoat-web/../../src/sdk.ts","webpack://cocogoat-web/../../src/tracing.ts","webpack://cocogoat-web/./node_modules/.pnpm/tslib@1.14.1/node_modules/tslib/tslib.es6.js","webpack://cocogoat-web/./node_modules/.pnpm/ifdef-loader@2.3.2/node_modules/ifdef-loader/ifdef-loader.js"],"sourcesContent":["/*\n * This file defines flags and constants that can be modified during compile time in order to facilitate tree shaking\n * for users.\n *\n * Debug flags need to be declared in each package individually and must not be imported across package boundaries,\n * because some build tools have trouble tree-shaking imported guards.\n *\n * As a convention, we define debug flags in a `flags.ts` file in the root of a package's `src` folder.\n *\n * Debug flag files will contain \"magic strings\" like `__SENTRY_DEBUG__` that may get replaced with actual values during\n * our, or the user's build process. Take care when introducing new flags - they must not throw if they are not\n * replaced.\n */\n\ndeclare const __SENTRY_DEBUG__: boolean;\n\n/** Flag that is true for debug builds, false otherwise. */\nexport const IS_DEBUG_BUILD = typeof __SENTRY_DEBUG__ === 'undefined' ? true : __SENTRY_DEBUG__;\n","import { SentryError } from './error';\nimport { rejectedSyncPromise, resolvedSyncPromise, SyncPromise } from './syncpromise';\n\nexport interface PromiseBuffer<T> {\n  // exposes the internal array so tests can assert on the state of it.\n  // XXX: this really should not be public api.\n  $: Array<PromiseLike<T>>;\n  add(taskProducer: () => PromiseLike<T>): PromiseLike<T>;\n  drain(timeout?: number): PromiseLike<boolean>;\n}\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nexport function makePromiseBuffer<T>(limit?: number): PromiseBuffer<T> {\n  const buffer: Array<PromiseLike<T>> = [];\n\n  function isReady(): boolean {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task: PromiseLike<T>): PromiseLike<T> {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer: () => PromiseLike<T>): PromiseLike<T> {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise due to buffer limit reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          // eslint-disable-next-line no-plusplus\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n","import { ClientReport, ClientReportEnvelope, ClientReportItem } from '@sentry/types';\n\nimport { createEnvelope } from './envelope';\nimport { dateTimestampInSeconds } from './time';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nexport function createClientReportEnvelope(\n  discarded_events: ClientReport['discarded_events'],\n  dsn?: string,\n  timestamp?: number,\n): ClientReportEnvelope {\n  const clientReportItem: ClientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope<ClientReportEnvelope>(dsn ? { dsn } : {}, [clientReportItem]);\n}\n","import { EventStatus } from '@sentry/types';\n/**\n * Converts an HTTP status code to sentry status {@link EventStatus}.\n *\n * @param code number HTTP status code\n * @returns EventStatus\n */\nexport function eventStatusFromHttpCode(code: number): EventStatus {\n  if (code >= 200 && code < 300) {\n    return 'success';\n  }\n\n  if (code === 429) {\n    return 'rate_limit';\n  }\n\n  if (code >= 400 && code < 500) {\n    return 'invalid';\n  }\n\n  if (code >= 500) {\n    return 'failed';\n  }\n\n  return 'unknown';\n}\n","// Keeping the key broad until we add the new transports\nexport type RateLimits = Record<string, number>;\n\nexport const DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nexport function parseRetryAfterHeader(header: string, now: number = Date.now()): number {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that given category is disabled until for rate limiting\n */\nexport function disabledUntil(limits: RateLimits, category: string): number {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nexport function isRateLimited(limits: RateLimits, category: string, now: number = Date.now()): boolean {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n * Returns true if headers contains a non-empty rate limiting header.\n */\nexport function updateRateLimits(\n  limits: RateLimits,\n  headers: Record<string, string | null | undefined>,\n  now: number = Date.now(),\n): RateLimits {\n  const updatedRateLimits: RateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const parameters = limit.split(':', 2);\n      const headerDelay = parseInt(parameters[0], 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!parameters[1]) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of parameters[1].split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  }\n\n  return updatedRateLimits;\n}\n","import {\n  APIDetails,\n  eventToSentryRequest,\n  getEnvelopeEndpointWithUrlEncodedAuth,\n  getStoreEndpointWithUrlEncodedAuth,\n  initAPIDetails,\n  sessionToSentryRequest,\n} from '@sentry/core';\nimport {\n  ClientReport,\n  Event,\n  Outcome,\n  Response as SentryResponse,\n  SentryRequest,\n  SentryRequestType,\n  Session,\n  Transport,\n  TransportOptions,\n} from '@sentry/types';\nimport {\n  createClientReportEnvelope,\n  disabledUntil,\n  dsnToString,\n  eventStatusFromHttpCode,\n  getGlobalObject,\n  isRateLimited,\n  logger,\n  makePromiseBuffer,\n  PromiseBuffer,\n  RateLimits,\n  serializeEnvelope,\n  updateRateLimits,\n} from '@sentry/utils';\n\nimport { IS_DEBUG_BUILD } from '../flags';\nimport { sendReport } from './utils';\n\nfunction requestTypeToCategory(ty: SentryRequestType): string {\n  const tyStr = ty as string;\n  return tyStr === 'event' ? 'error' : tyStr;\n}\n\nconst global = getGlobalObject<Window>();\n\n/** Base Transport class implementation */\nexport abstract class BaseTransport implements Transport {\n  /**\n   * @deprecated\n   */\n  public url: string;\n\n  /** Helper to get Sentry API endpoints. */\n  protected readonly _api: APIDetails;\n\n  /** A simple buffer holding all requests. */\n  protected readonly _buffer: PromiseBuffer<SentryResponse> = makePromiseBuffer(30);\n\n  /** Locks transport after receiving rate limits in a response */\n  protected _rateLimits: RateLimits = {};\n\n  protected _outcomes: { [key: string]: number } = {};\n\n  public constructor(public options: TransportOptions) {\n    this._api = initAPIDetails(options.dsn, options._metadata, options.tunnel);\n    // eslint-disable-next-line deprecation/deprecation\n    this.url = getStoreEndpointWithUrlEncodedAuth(this._api.dsn);\n\n    if (this.options.sendClientReports && global.document) {\n      global.document.addEventListener('visibilitychange', () => {\n        if (global.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): PromiseLike<SentryResponse> {\n    return this._sendRequest(eventToSentryRequest(event, this._api), event);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session): PromiseLike<SentryResponse> {\n    return this._sendRequest(sessionToSentryRequest(session, this._api), session);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this._buffer.drain(timeout);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public recordLostEvent(reason: Outcome, category: SentryRequestType): void {\n    if (!this.options.sendClientReports) {\n      return;\n    }\n    // We want to track each category (event, transaction, session) separately\n    // but still keep the distinction between different type of outcomes.\n    // We could use nested maps, but it's much easier to read and type this way.\n    // A correct type for map-based implementation if we want to go that route\n    // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n    const key = `${requestTypeToCategory(category)}:${reason}`;\n    IS_DEBUG_BUILD && logger.log(`Adding outcome: ${key}`);\n    this._outcomes[key] = (this._outcomes[key] ?? 0) + 1;\n  }\n\n  /**\n   * Send outcomes as an envelope\n   */\n  protected _flushOutcomes(): void {\n    if (!this.options.sendClientReports) {\n      return;\n    }\n\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n\n    // Nothing to send\n    if (!Object.keys(outcomes).length) {\n      IS_DEBUG_BUILD && logger.log('No outcomes to flush');\n      return;\n    }\n\n    IS_DEBUG_BUILD && logger.log(`Flushing outcomes:\\n${JSON.stringify(outcomes, null, 2)}`);\n\n    const url = getEnvelopeEndpointWithUrlEncodedAuth(this._api.dsn, this._api.tunnel);\n\n    const discardedEvents = Object.keys(outcomes).map(key => {\n      const [category, reason] = key.split(':');\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n      // TODO: Improve types on discarded_events to get rid of cast\n    }) as ClientReport['discarded_events'];\n    const envelope = createClientReportEnvelope(discardedEvents, this._api.tunnel && dsnToString(this._api.dsn));\n\n    try {\n      sendReport(url, serializeEnvelope(envelope));\n    } catch (e) {\n      IS_DEBUG_BUILD && logger.error(e);\n    }\n  }\n\n  /**\n   * Handle Sentry repsonse for promise-based transports.\n   */\n  protected _handleResponse({\n    requestType,\n    response,\n    headers,\n    resolve,\n    reject,\n  }: {\n    requestType: SentryRequestType;\n    response: Response | XMLHttpRequest;\n    headers: Record<string, string | null>;\n    resolve: (value?: SentryResponse | PromiseLike<SentryResponse> | null | undefined) => void;\n    reject: (reason?: unknown) => void;\n  }): void {\n    const status = eventStatusFromHttpCode(response.status);\n\n    this._rateLimits = updateRateLimits(this._rateLimits, headers);\n    // eslint-disable-next-line deprecation/deprecation\n    if (this._isRateLimited(requestType)) {\n      IS_DEBUG_BUILD &&\n        // eslint-disable-next-line deprecation/deprecation\n        logger.warn(`Too many ${requestType} requests, backing off until: ${this._disabledUntil(requestType)}`);\n    }\n\n    if (status === 'success') {\n      resolve({ status });\n      return;\n    }\n\n    reject(response);\n  }\n\n  /**\n   * Gets the time that given category is disabled until for rate limiting\n   *\n   * @deprecated Please use `disabledUntil` from @sentry/utils\n   */\n  protected _disabledUntil(requestType: SentryRequestType): Date {\n    const category = requestTypeToCategory(requestType);\n    return new Date(disabledUntil(this._rateLimits, category));\n  }\n\n  /**\n   * Checks if a category is rate limited\n   *\n   * @deprecated Please use `isRateLimited` from @sentry/utils\n   */\n  protected _isRateLimited(requestType: SentryRequestType): boolean {\n    const category = requestTypeToCategory(requestType);\n    return isRateLimited(this._rateLimits, category);\n  }\n\n  protected abstract _sendRequest(\n    sentryRequest: SentryRequest,\n    originalPayload: Event | Session,\n  ): PromiseLike<SentryResponse>;\n}\n","/**\n * Consumes the promise and logs the error when it rejects.\n * @param promise A promise to forget.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function forget(promise: PromiseLike<any>): void {\n  void promise.then(null, e => {\n    // TODO: Use a better logging mechanism\n    // eslint-disable-next-line no-console\n    console.error(e);\n  });\n}\n","import { forget, getGlobalObject, isNativeFetch, logger, supportsFetch } from '@sentry/utils';\n\nimport { IS_DEBUG_BUILD } from '../flags';\n\nconst global = getGlobalObject<Window>();\nlet cachedFetchImpl: FetchImpl;\n\nexport type FetchImpl = typeof fetch;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nexport function getNativeFetchImplementation(): FetchImpl {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(global.fetch)) {\n    return (cachedFetchImpl = global.fetch.bind(global));\n  }\n\n  const document = global.document;\n  let fetchImpl = global.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      IS_DEBUG_BUILD &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(global));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/**\n * Sends sdk client report using sendBeacon or fetch as a fallback if available\n *\n * @param url report endpoint\n * @param body report payload\n */\nexport function sendReport(url: string, body: string): void {\n  const isRealNavigator = Object.prototype.toString.call(global && global.navigator) === '[object Navigator]';\n  const hasSendBeacon = isRealNavigator && typeof global.navigator.sendBeacon === 'function';\n\n  if (hasSendBeacon) {\n    // Prevent illegal invocations - https://xgwang.me/posts/you-may-not-know-beacon/#it-may-throw-error%2C-be-sure-to-catch\n    const sendBeacon = global.navigator.sendBeacon.bind(global.navigator);\n    return sendBeacon(url, body);\n  }\n\n  if (supportsFetch()) {\n    const fetch = getNativeFetchImplementation();\n    return forget(\n      fetch(url, {\n        body,\n        method: 'POST',\n        credentials: 'omit',\n        keepalive: true,\n      }),\n    );\n  }\n}\n","import { DsnComponents, DsnLike, SdkMetadata } from '@sentry/types';\nimport { dsnToString, makeDsn, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/**\n * Stores details about a Sentry SDK\n */\nexport interface APIDetails {\n  /** The DSN as passed to Sentry.init() */\n  initDsn: DsnLike;\n  /** Metadata about the SDK (name, version, etc) for inclusion in envelope headers */\n  metadata: SdkMetadata;\n  /** The internally used Dsn object. */\n  readonly dsn: DsnComponents;\n  /** The envelope tunnel to use. */\n  readonly tunnel?: string;\n}\n\n/**\n * Helper class to provide urls, headers and metadata that can be used to form\n * different types of requests to Sentry endpoints.\n * Supports both envelopes and regular event requests.\n *\n * @deprecated Please use APIDetails\n **/\nexport class API {\n  /** The DSN as passed to Sentry.init() */\n  public dsn: DsnLike;\n\n  /** Metadata about the SDK (name, version, etc) for inclusion in envelope headers */\n  public metadata: SdkMetadata;\n\n  /** The internally used Dsn object. */\n  private readonly _dsnObject: DsnComponents;\n\n  /** The envelope tunnel to use. */\n  private readonly _tunnel?: string;\n\n  /** Create a new instance of API */\n  public constructor(dsn: DsnLike, metadata: SdkMetadata = {}, tunnel?: string) {\n    this.dsn = dsn;\n    this._dsnObject = makeDsn(dsn);\n    this.metadata = metadata;\n    this._tunnel = tunnel;\n  }\n\n  /** Returns the Dsn object. */\n  public getDsn(): DsnComponents {\n    return this._dsnObject;\n  }\n\n  /** Does this transport force envelopes? */\n  public forceEnvelope(): boolean {\n    return !!this._tunnel;\n  }\n\n  /** Returns the prefix to construct Sentry ingestion API endpoints. */\n  public getBaseApiEndpoint(): string {\n    return getBaseApiEndpoint(this._dsnObject);\n  }\n\n  /** Returns the store endpoint URL. */\n  public getStoreEndpoint(): string {\n    return getStoreEndpoint(this._dsnObject);\n  }\n\n  /**\n   * Returns the store endpoint URL with auth in the query string.\n   *\n   * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n   */\n  public getStoreEndpointWithUrlEncodedAuth(): string {\n    return getStoreEndpointWithUrlEncodedAuth(this._dsnObject);\n  }\n\n  /**\n   * Returns the envelope endpoint URL with auth in the query string.\n   *\n   * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n   */\n  public getEnvelopeEndpointWithUrlEncodedAuth(): string {\n    return getEnvelopeEndpointWithUrlEncodedAuth(this._dsnObject, this._tunnel);\n  }\n}\n\n/** Initializes API Details */\nexport function initAPIDetails(dsn: DsnLike, metadata?: SdkMetadata, tunnel?: string): APIDetails {\n  return {\n    initDsn: dsn,\n    metadata: metadata || {},\n    dsn: makeDsn(dsn),\n    tunnel,\n  } as APIDetails;\n}\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn: DsnComponents): string {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn: DsnComponents, target: 'store' | 'envelope'): string {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/${target}/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn: DsnComponents): string {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n  });\n}\n\n/** Returns the store endpoint URL. */\nfunction getStoreEndpoint(dsn: DsnComponents): string {\n  return _getIngestEndpoint(dsn, 'store');\n}\n\n/**\n * Returns the store endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nexport function getStoreEndpointWithUrlEncodedAuth(dsn: DsnComponents): string {\n  return `${getStoreEndpoint(dsn)}?${_encodedAuth(dsn)}`;\n}\n\n/** Returns the envelope endpoint URL. */\nfunction _getEnvelopeEndpoint(dsn: DsnComponents): string {\n  return _getIngestEndpoint(dsn, 'envelope');\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nexport function getEnvelopeEndpointWithUrlEncodedAuth(dsn: DsnComponents, tunnel?: string): string {\n  return tunnel ? tunnel : `${_getEnvelopeEndpoint(dsn)}?${_encodedAuth(dsn)}`;\n}\n\n/**\n * Returns an object that can be used in request headers.\n * This is needed for node and the old /store endpoint in sentry\n */\nexport function getRequestHeaders(\n  dsn: DsnComponents,\n  clientName: string,\n  clientVersion: string,\n): { [key: string]: string } {\n  // CHANGE THIS to use metadata but keep clientName and clientVersion compatible\n  const header = [`Sentry sentry_version=${SENTRY_API_VERSION}`];\n  header.push(`sentry_client=${clientName}/${clientVersion}`);\n  header.push(`sentry_key=${dsn.publicKey}`);\n  if (dsn.pass) {\n    header.push(`sentry_secret=${dsn.pass}`);\n  }\n  return {\n    'Content-Type': 'application/json',\n    'X-Sentry-Auth': header.join(', '),\n  };\n}\n\n/** Returns the url to the report dialog endpoint. */\nexport function getReportDialogEndpoint(\n  dsnLike: DsnLike,\n  dialogOptions: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n    user?: { name?: string; email?: string };\n  },\n): string {\n  const dsn = makeDsn(dsnLike);\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'user') {\n      if (!dialogOptions.user) {\n        continue;\n      }\n      if (dialogOptions.user.name) {\n        encodedOptions += `&name=${encodeURIComponent(dialogOptions.user.name)}`;\n      }\n      if (dialogOptions.user.email) {\n        encodedOptions += `&email=${encodeURIComponent(dialogOptions.user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport type MemoFunc = [\n  // memoize\n  (obj: any) => boolean,\n  // unmemoize\n  (obj: any) => void,\n];\n\n/**\n * Helper to decycle json objects\n */\nexport function memoBuilder(): MemoFunc {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner: any = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj: any): boolean {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj: any): void {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n","import { StackFrame } from '@sentry/types';\n\nconst STACKTRACE_LIMIT = 50;\n\nexport type StackParser = (stack: string, skipFirst?: number) => StackFrame[];\nexport type StackLineParserFn = (line: string) => StackFrame | undefined;\nexport type StackLineParser = [number, StackLineParserFn];\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nexport function createStackParser(...parsers: StackLineParser[]): StackParser {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack: string, skipFirst: number = 0): StackFrame[] => {\n    const frames: StackFrame[] = [];\n\n    for (const line of stack.split('\\n').slice(skipFirst)) {\n      for (const parser of sortedParsers) {\n        const frame = parser(line);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * @hidden\n */\nexport function stripSentryFramesAndReverse(stack: StackFrame[]): StackFrame[] {\n  if (!stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  const firstFrameFunction = localStack[0].function || '';\n  const lastFrameFunction = localStack[localStack.length - 1].function || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .slice(0, STACKTRACE_LIMIT)\n    .map(frame => ({\n      ...frame,\n      filename: frame.filename || localStack[0].filename,\n      function: frame.function || '?',\n    }))\n    .reverse();\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n","import { Primitive } from '@sentry/types';\n\nimport { isError, isEvent, isNaN, isSyntheticEvent } from './is';\nimport { memoBuilder, MemoFunc } from './memo';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output..\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\nexport function normalize(input: unknown, depth: number = +Infinity, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, there is no key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo: MemoFunc = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // If the value has a `toJSON` method, see if we can bail and let it do the work\n  const valueWithToJSON = value as unknown & { toJSON?: () => Primitive | ObjOrArray<unknown> };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      return valueWithToJSON.toJSON();\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // Get the simple cases out of the way first\n  if (value === null || (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // We're also done if we've reached the max depth\n  if (depth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = (isError(value) || isEvent(value) ? convertToPlainObject(value) : value) as ObjOrArray<unknown>;\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, depth - 1, maxProperties, memo);\n\n    numAdded += 1;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n// TODO remove this in v7 (this means the method will no longer be exported, under any name)\nexport { visit as walk };\n\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    // this catches `undefined` (but not `null`, which is a primitive and can be serialized on its own)\n    if (value === void 0) {\n      return '[undefined]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    return `[object ${(Object.getPrototypeOf(value) as Prototype).constructor.name}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n","import {\n  Event,\n  EventEnvelope,\n  EventItem,\n  SdkInfo,\n  SentryRequest,\n  SentryRequestType,\n  Session,\n  SessionAggregates,\n  SessionEnvelope,\n  SessionItem,\n} from '@sentry/types';\nimport { createEnvelope, dsnToString, normalize, serializeEnvelope } from '@sentry/utils';\n\nimport { APIDetails, getEnvelopeEndpointWithUrlEncodedAuth, getStoreEndpointWithUrlEncodedAuth } from './api';\n\n/** Extract sdk info from from the API metadata */\nfunction getSdkMetadataForEnvelopeHeader(api: APIDetails): SdkInfo | undefined {\n  if (!api.metadata || !api.metadata.sdk) {\n    return;\n  }\n  const { name, version } = api.metadata.sdk;\n  return { name, version };\n}\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event: Event, sdkInfo?: SdkInfo): Event {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nexport function createSessionEnvelope(\n  session: Session | SessionAggregates,\n  api: APIDetails,\n): [SessionEnvelope, SentryRequestType] {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(api);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!api.tunnel && { dsn: dsnToString(api.dsn) }),\n  };\n\n  // I know this is hacky but we don't want to add `sessions` to request type since it's never rate limited\n  const type = 'aggregates' in session ? ('sessions' as SentryRequestType) : 'session';\n\n  // TODO (v7) Have to cast type because envelope items do not accept a `SentryRequestType`\n  const envelopeItem = [{ type } as { type: 'session' | 'sessions' }, session] as SessionItem;\n  const envelope = createEnvelope<SessionEnvelope>(envelopeHeaders, [envelopeItem]);\n\n  return [envelope, type];\n}\n\n/** Creates a SentryRequest from a Session. */\nexport function sessionToSentryRequest(session: Session | SessionAggregates, api: APIDetails): SentryRequest {\n  const [envelope, type] = createSessionEnvelope(session, api);\n  return {\n    body: serializeEnvelope(envelope),\n    type,\n    url: getEnvelopeEndpointWithUrlEncodedAuth(api.dsn, api.tunnel),\n  };\n}\n\n/**\n * Create an Envelope from an event. Note that this is duplicated from below,\n * but on purpose as this will be refactored in v7.\n */\nexport function createEventEnvelope(event: Event, api: APIDetails): EventEnvelope {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(api);\n  const eventType = event.type || 'event';\n\n  const { transactionSampling } = event.sdkProcessingMetadata || {};\n  const { method: samplingMethod, rate: sampleRate } = transactionSampling || {};\n\n  // TODO: Below is a temporary hack in order to debug a serialization error - see\n  // https://github.com/getsentry/sentry-javascript/issues/2809,\n  // https://github.com/getsentry/sentry-javascript/pull/4425, and\n  // https://github.com/getsentry/sentry-javascript/pull/4574.\n  //\n  // TL; DR: even though we normalize all events (which should prevent this), something is causing `JSON.stringify` to\n  // throw a circular reference error.\n  //\n  // When it's time to remove it:\n  // 1. Delete everything between here and where the request object `req` is created, EXCEPT the line deleting\n  //    `sdkProcessingMetadata`\n  // 2. Restore the original version of the request body, which is commented out\n  // 3. Search for either of the PR URLs above and pull out the companion hacks in the browser playwright tests and the\n  //    baseClient tests in this package\n  enhanceEventWithSdkInfo(event, api.metadata.sdk);\n  event.tags = event.tags || {};\n  event.extra = event.extra || {};\n\n  // In theory, all events should be marked as having gone through normalization and so\n  // we should never set this tag/extra data\n  if (!(event.sdkProcessingMetadata && event.sdkProcessingMetadata.baseClientNormalized)) {\n    event.tags.skippedNormalization = true;\n    event.extra.normalizeDepth = event.sdkProcessingMetadata ? event.sdkProcessingMetadata.normalizeDepth : 'unset';\n  }\n\n  // prevent this data from being sent to sentry\n  // TODO: This is NOT part of the hack - DO NOT DELETE\n  delete event.sdkProcessingMetadata;\n\n  const envelopeHeaders = {\n    event_id: event.event_id as string,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!api.tunnel && { dsn: dsnToString(api.dsn) }),\n  };\n  const eventItem: EventItem = [\n    {\n      type: eventType,\n      sample_rates: [{ id: samplingMethod, rate: sampleRate }],\n    },\n    event,\n  ];\n  return createEnvelope<EventEnvelope>(envelopeHeaders, [eventItem]);\n}\n\n/** Creates a SentryRequest from an event. */\nexport function eventToSentryRequest(event: Event, api: APIDetails): SentryRequest {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(api);\n  const eventType = event.type || 'event';\n  const useEnvelope = eventType === 'transaction' || !!api.tunnel;\n\n  const { transactionSampling } = event.sdkProcessingMetadata || {};\n  const { method: samplingMethod, rate: sampleRate } = transactionSampling || {};\n\n  // TODO: Below is a temporary hack in order to debug a serialization error - see\n  // https://github.com/getsentry/sentry-javascript/issues/2809,\n  // https://github.com/getsentry/sentry-javascript/pull/4425, and\n  // https://github.com/getsentry/sentry-javascript/pull/4574.\n  //\n  // TL; DR: even though we normalize all events (which should prevent this), something is causing `JSON.stringify` to\n  // throw a circular reference error.\n  //\n  // When it's time to remove it:\n  // 1. Delete everything between here and where the request object `req` is created, EXCEPT the line deleting\n  //    `sdkProcessingMetadata`\n  // 2. Restore the original version of the request body, which is commented out\n  // 3. Search for either of the PR URLs above and pull out the companion hacks in the browser playwright tests and the\n  //    baseClient tests in this package\n  enhanceEventWithSdkInfo(event, api.metadata.sdk);\n  event.tags = event.tags || {};\n  event.extra = event.extra || {};\n\n  // In theory, all events should be marked as having gone through normalization and so\n  // we should never set this tag/extra data\n  if (!(event.sdkProcessingMetadata && event.sdkProcessingMetadata.baseClientNormalized)) {\n    event.tags.skippedNormalization = true;\n    event.extra.normalizeDepth = event.sdkProcessingMetadata ? event.sdkProcessingMetadata.normalizeDepth : 'unset';\n  }\n\n  // prevent this data from being sent to sentry\n  // TODO: This is NOT part of the hack - DO NOT DELETE\n  delete event.sdkProcessingMetadata;\n\n  let body;\n  try {\n    // 99.9% of events should get through just fine - no change in behavior for them\n    body = JSON.stringify(event);\n  } catch (err) {\n    // Record data about the error without replacing original event data, then force renormalization\n    event.tags.JSONStringifyError = true;\n    event.extra.JSONStringifyError = err;\n    try {\n      body = JSON.stringify(normalize(event));\n    } catch (newErr) {\n      // At this point even renormalization hasn't worked, meaning something about the event data has gone very wrong.\n      // Time to cut our losses and record only the new error. With luck, even in the problematic cases we're trying to\n      // debug with this hack, we won't ever land here.\n      const innerErr = newErr as Error;\n      body = JSON.stringify({\n        message: 'JSON.stringify error after renormalization',\n        // setting `extra: { innerErr }` here for some reason results in an empty object, so unpack manually\n        extra: { message: innerErr.message, stack: innerErr.stack },\n      });\n    }\n  }\n\n  const req: SentryRequest = {\n    // this is the relevant line of code before the hack was added, to make it easy to undo said hack once we've solved\n    // the mystery\n    // body: JSON.stringify(sdkInfo ? enhanceEventWithSdkInfo(event, api.metadata.sdk) : event),\n    body,\n    type: eventType,\n    url: useEnvelope\n      ? getEnvelopeEndpointWithUrlEncodedAuth(api.dsn, api.tunnel)\n      : getStoreEndpointWithUrlEncodedAuth(api.dsn),\n  };\n\n  // https://develop.sentry.dev/sdk/envelopes/\n\n  // Since we don't need to manipulate envelopes nor store them, there is no\n  // exported concept of an Envelope with operations including serialization and\n  // deserialization. Instead, we only implement a minimal subset of the spec to\n  // serialize events inline here.\n  if (useEnvelope) {\n    const envelopeHeaders = {\n      event_id: event.event_id as string,\n      sent_at: new Date().toISOString(),\n      ...(sdkInfo && { sdk: sdkInfo }),\n      ...(!!api.tunnel && { dsn: dsnToString(api.dsn) }),\n    };\n    const eventItem: EventItem = [\n      {\n        type: eventType,\n        sample_rates: [{ id: samplingMethod, rate: sampleRate }],\n      },\n      req.body,\n    ];\n    const envelope = createEnvelope<EventEnvelope>(envelopeHeaders, [eventItem]);\n    req.body = serializeEnvelope(envelope);\n  }\n\n  return req;\n}\n","import { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\n\nimport { SentryError } from './error';\nimport { IS_DEBUG_BUILD } from './flags';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol?: string): protocol is DsnProtocol {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nexport function dsnToString(dsn: DsnComponents, withPassword: boolean = false): string {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\nfunction dsnFromString(str: string): DsnComponents {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    throw new SentryError(`Invalid Sentry Dsn: ${str}`);\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() as string;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, publicKey });\n}\n\nfunction dsnFromComponents(components: DsnComponents): DsnComponents {\n  // TODO this is for backwards compatibility, and can be removed in a future version\n  if ('user' in components && !('publicKey' in components)) {\n    components.publicKey = components.user;\n  }\n\n  return {\n    user: components.publicKey || '',\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn: DsnComponents): boolean | void {\n  if (!IS_DEBUG_BUILD) {\n    return;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents: ReadonlyArray<keyof DsnComponents> = ['protocol', 'publicKey', 'host', 'projectId'];\n  requiredComponents.forEach(component => {\n    if (!dsn[component]) {\n      throw new SentryError(`Invalid Sentry Dsn: ${component} missing`);\n    }\n  });\n\n  if (!projectId.match(/^\\d+$/)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n  }\n\n  if (!isValidProtocol(protocol)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid port ${port}`);\n  }\n\n  return true;\n}\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nexport function makeDsn(from: DsnLike): DsnComponents {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n\n  validateDsn(components);\n\n  return components;\n}\n","import { Envelope } from '@sentry/types';\n\nimport { isPrimitive } from './is';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function createEnvelope<E extends Envelope>(headers: E[0], items: E[1] = []): E {\n  return [headers, items] as E;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function addItemToEnvelope<E extends Envelope>(envelope: E, newItem: E[1][number]): E {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] as E;\n}\n\n/**\n * Get the type of the envelope. Grabs the type from the first envelope item.\n */\nexport function getEnvelopeType<E extends Envelope>(envelope: E): string {\n  const [, [[firstItemHeader]]] = envelope;\n  return firstItemHeader.type;\n}\n\n/**\n * Serializes an envelope into a string.\n */\nexport function serializeEnvelope(envelope: Envelope): string {\n  const [headers, items] = envelope;\n  const serializedHeaders = JSON.stringify(headers);\n\n  // Have to cast items to any here since Envelope is a union type\n  // Fixed in Typescript 4.2\n  // TODO: Remove any[] cast when we upgrade to TS 4.2\n  // https://github.com/microsoft/TypeScript/issues/36390\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (items as any[]).reduce((acc, item: typeof items[number]) => {\n    const [itemHeaders, payload] = item;\n    // We do not serialize payloads that are primitives\n    const serializedPayload = isPrimitive(payload) ? String(payload) : JSON.stringify(payload);\n    return `${acc}\\n${JSON.stringify(itemHeaders)}\\n${serializedPayload}`;\n  }, serializedHeaders);\n}\n","export const setPrototypeOf =\n  Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties);\n\n/**\n * setPrototypeOf polyfill using __proto__\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction setProtoOf<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  // @ts-ignore __proto__ does not exist on obj\n  obj.__proto__ = proto;\n  return obj as TTarget & TProto;\n}\n\n/**\n * setPrototypeOf polyfill using mixin\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction mixinProperties<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  for (const prop in proto) {\n    if (!Object.prototype.hasOwnProperty.call(obj, prop)) {\n      // @ts-ignore typescript complains about indexing so we remove\n      obj[prop] = proto[prop];\n    }\n  }\n\n  return obj as TTarget & TProto;\n}\n","import { setPrototypeOf } from './polyfill';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public constructor(public message: string) {\n    super(message);\n\n    this.name = new.target.prototype.constructor.name;\n    setPrototypeOf(this, new.target.prototype);\n  }\n}\n","/*\n * This file defines flags and constants that can be modified during compile time in order to facilitate tree shaking\n * for users.\n *\n * Debug flags need to be declared in each package individually and must not be imported across package boundaries,\n * because some build tools have trouble tree-shaking imported guards.\n *\n * As a convention, we define debug flags in a `flags.ts` file in the root of a package's `src` folder.\n *\n * Debug flag files will contain \"magic strings\" like `__SENTRY_DEBUG__` that may get replaced with actual values during\n * our, or the user's build process. Take care when introducing new flags - they must not throw if they are not\n * replaced.\n */\n\ndeclare const __SENTRY_DEBUG__: boolean;\n\n/** Flag that is true for debug builds, false otherwise. */\nexport const IS_DEBUG_BUILD = typeof __SENTRY_DEBUG__ === 'undefined' ? true : __SENTRY_DEBUG__;\n","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Integration } from '@sentry/types';\n\nimport { isNodeEnv } from './node';\n\n/** Internal */\ninterface SentryGlobal {\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n  };\n}\n\nconst fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject<T>(): T & SentryGlobal {\n  return (\n    isNodeEnv()\n      ? global\n      : typeof window !== 'undefined' // eslint-disable-line no-restricted-globals\n      ? window // eslint-disable-line no-restricted-globals\n      : typeof self !== 'undefined'\n      ? self\n      : fallbackGlobalObject\n  ) as T & SentryGlobal;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `getGlobalObject`'s return value\n * @returns the singleton\n */\nexport function getGlobalSingleton<T>(name: keyof SentryGlobal['__SENTRY__'], creator: () => T, obj?: unknown): T {\n  const global = (obj || getGlobalObject()) as SentryGlobal;\n  const __SENTRY__ = (global.__SENTRY__ = global.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport { Primitive } from '@sentry/types';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n\nfunction isBuiltin(wat: unknown, ty: string): boolean {\n  return objectToString.call(wat) === `[object ${ty}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): boolean {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isNaN(wat: unknown): boolean {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n","import { WrappedFunction } from '@sentry/types';\n\nimport { IS_DEBUG_BUILD } from './flags';\nimport { getGlobalObject, getGlobalSingleton } from './global';\n\n// TODO: Implement different loggers for different environments\nconst global = getGlobalObject<Window | NodeJS.Global>();\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nexport const CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert'] as const;\n\ntype LoggerMethod = (...args: unknown[]) => void;\ntype LoggerConsoleMethods = Record<typeof CONSOLE_LEVELS[number], LoggerMethod>;\n\n/** JSDoc */\ninterface Logger extends LoggerConsoleMethods {\n  disable(): void;\n  enable(): void;\n}\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n  const global = getGlobalObject<Window>();\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  const originalConsole = global.console as Console & Record<string, unknown>;\n  const wrappedLevels: Partial<LoggerConsoleMethods> = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    const originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] as WrappedFunction).__sentry_original__;\n    if (level in global.console && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] as LoggerConsoleMethods[typeof level];\n      originalConsole[level] = originalWrappedFunc as Console[typeof level];\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level as typeof CONSOLE_LEVELS[number]];\n    });\n  }\n}\n\nfunction makeLogger(): Logger {\n  let enabled = false;\n  const logger: Partial<Logger> = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if (IS_DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args: any[]) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            global.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger as Logger;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger: Logger;\nif (IS_DEBUG_BUILD) {\n  logger = getGlobalSingleton('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\nexport { logger };\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These fags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\nimport { isBrowserBundle } from './env';\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nexport function loadModule<T>(moduleName: string): T | undefined {\n  let mod: T | undefined;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) as T;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n","import { getGlobalObject } from './global';\nimport { isString } from './is';\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(elem: unknown, keyAttrs?: string[]): string {\n  type SimpleNode = {\n    parentNode: SimpleNode;\n  } | null;\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const MAX_OUTPUT_LEN = 80;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n\n    // eslint-disable-next-line no-plusplus\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown, keyAttrs?: string[]): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  const global = getGlobalObject<Window>();\n  try {\n    return global.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n","/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ExtendedError, WrappedFunction } from '@sentry/types';\n\nimport { htmlTreeAsString } from './browser';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive } from './is';\nimport { truncate } from './string';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nexport function addNonEnumerableProperty(obj: { [key: string]: unknown }, name: string, value: unknown): void {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nexport function markFunctionWrapped(wrapped: WrappedFunction, original: WrappedFunction): void {\n  const proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nexport function getOriginalFunction(func: WrappedFunction): WrappedFunction | undefined {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any object into an object literal with all its attributes\n * attached to it.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n */\nexport function convertToPlainObject(value: unknown): {\n  [key: string]: unknown;\n} {\n  let newObj = value as {\n    [key: string]: unknown;\n  };\n\n  if (isError(value)) {\n    newObj = {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value as ExtendedError),\n    };\n  } else if (isEvent(value)) {\n    /**\n     * Event-like interface that's usable in browser and node\n     */\n    interface SimpleEvent {\n      [key: string]: unknown;\n      type: string;\n      target?: unknown;\n      currentTarget?: unknown;\n    }\n\n    const event = value as SimpleEvent;\n\n    newObj = {\n      type: event.type,\n      target: serializeEventTarget(event.target),\n      currentTarget: serializeEventTarget(event.currentTarget),\n      ...getOwnProperties(event),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = event.detail;\n    }\n  }\n  return newObj;\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target: unknown): string {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj: { [key: string]: unknown }): { [key: string]: unknown } {\n  const extractedProps: { [key: string]: unknown } = {};\n  for (const property in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, property)) {\n      extractedProps[property] = obj[property];\n    }\n  }\n  return extractedProps;\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function extractExceptionKeysForMessage(exception: any, maxLength: number = 40): string {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return the new object with removed keys that value was `undefined`.\n * Works recursively on objects and arrays.\n */\nexport function dropUndefinedKeys<T>(val: T): T {\n  if (isPlainObject(val)) {\n    const rv: { [key: string]: any } = {};\n    for (const key of Object.keys(val)) {\n      if (typeof val[key] !== 'undefined') {\n        rv[key] = dropUndefinedKeys(val[key]);\n      }\n    }\n    return rv as T;\n  }\n\n  if (Array.isArray(val)) {\n    return (val as any[]).map(dropUndefinedKeys) as any;\n  }\n\n  return val;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nexport function objectify(wat: unknown): typeof Object {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat as any).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n","import { IS_DEBUG_BUILD } from './flags';\nimport { getGlobalObject } from './global';\nimport { logger } from './logger';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in getGlobalObject<Window>())) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  const global = getGlobalObject<Window>();\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(global.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = global.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      IS_DEBUG_BUILD &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in getGlobalObject();\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  const global = getGlobalObject<Window>();\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = (global as any).chrome;\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nconst enum States {\n  /** Pending */\n  PENDING = 0,\n  /** Resolved / OK */\n  RESOLVED = 1,\n  /** Rejected / Error */\n  REJECTED = 2,\n}\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nexport function resolvedSyncPromise<T>(value: T | PromiseLike<T>): PromiseLike<T> {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nexport function rejectedSyncPromise<T = never>(reason?: any): PromiseLike<T> {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States = States.PENDING;\n  private _handlers: Array<[boolean, (value: T) => void, (reason: any) => any]> = [];\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val as unknown as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value as unknown as any);\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n","import { getGlobalObject } from './global';\nimport { dynamicRequire, isNodeEnv } from './node';\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\ninterface TimestampSource {\n  nowSeconds(): number;\n}\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource: TimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance(): Performance | undefined {\n  const { performance } = getGlobalObject<Window>();\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance(): Performance | undefined {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') as { performance: Performance };\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance: Performance | undefined = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource: TimestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nexport const dateTimestampInSeconds: () => number = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport const timestampInSeconds: () => number = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nexport const timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nexport const usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nexport let _browserPerformanceTimeOriginMode: string;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport const browserPerformanceTimeOrigin = ((): number | undefined => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = getGlobalObject<Window>();\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n","import { ViewModel } from './types';\n\n// Vendored directly from https://github.com/vuejs/vue/blob/master/src/core/util/debug.js with types only changes.\nconst classifyRE = /(?:^|[-_])(\\w)/g;\nconst classify = (str: string): string => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\n\nconst ROOT_COMPONENT_NAME = '<Root>';\nconst ANONYMOUS_COMPONENT_NAME = '<Anonymous>';\n\nconst repeat = (str: string, n: number): string => {\n  let res = '';\n  while (n) {\n    if (n % 2 === 1) {\n      res += str;\n    }\n    if (n > 1) {\n      str += str; // eslint-disable-line no-param-reassign\n    }\n    n >>= 1; // eslint-disable-line no-bitwise, no-param-reassign\n  }\n  return res;\n};\n\nexport const formatComponentName = (vm?: ViewModel, includeFile?: boolean): string => {\n  if (!vm) {\n    return ANONYMOUS_COMPONENT_NAME;\n  }\n\n  if (vm.$root === vm) {\n    return ROOT_COMPONENT_NAME;\n  }\n\n  const options = vm.$options;\n\n  let name = options.name || options._componentTag;\n  const file = options.__file;\n  if (!name && file) {\n    const match = file.match(/([^/\\\\]+)\\.vue$/);\n    if (match) {\n      name = match[1];\n    }\n  }\n\n  return (\n    (name ? `<${classify(name)}>` : ANONYMOUS_COMPONENT_NAME) + (file && includeFile !== false ? ` at ${file}` : '')\n  );\n};\n\nexport const generateComponentTrace = (vm?: ViewModel): string => {\n  if ((vm?._isVue || vm?.__isVue) && vm?.$parent) {\n    const tree = [];\n    let currentRecursiveSequence = 0;\n    while (vm) {\n      if (tree.length > 0) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const last = tree[tree.length - 1] as any;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (last.constructor === vm.constructor) {\n          currentRecursiveSequence += 1;\n          vm = vm.$parent; // eslint-disable-line no-param-reassign\n          continue;\n        } else if (currentRecursiveSequence > 0) {\n          tree[tree.length - 1] = [last, currentRecursiveSequence];\n          currentRecursiveSequence = 0;\n        }\n      }\n      tree.push(vm);\n      vm = vm.$parent; // eslint-disable-line no-param-reassign\n    }\n\n    const formattedTree = tree\n      .map(\n        (vm, i) =>\n          `${\n            (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) +\n            (Array.isArray(vm)\n              ? `${formatComponentName(vm[0])}... (${vm[1]} recursive calls)`\n              : formatComponentName(vm))\n          }`,\n      )\n      .join('\\n');\n\n    return `\\n\\nfound in\\n\\n${formattedTree}`;\n  }\n\n  return `\\n\\n(found in ${formatComponentName(vm)})`;\n};\n","import { Operation } from './types';\n\nexport const DEFAULT_HOOKS: Operation[] = ['activate', 'mount', 'update'];\n","import { getCurrentHub } from '@sentry/browser';\n\nimport { formatComponentName, generateComponentTrace } from './components';\nimport { Options, ViewModel, Vue } from './types';\n\ntype UnknownFunc = (...args: unknown[]) => void;\n\nexport const attachErrorHandler = (app: Vue, options: Options): void => {\n  const { errorHandler, warnHandler, silent } = app.config;\n\n  app.config.errorHandler = (error: Error, vm: ViewModel, lifecycleHook: string): void => {\n    const componentName = formatComponentName(vm, false);\n    const trace = vm ? generateComponentTrace(vm) : '';\n    const metadata: Record<string, unknown> = {\n      componentName,\n      lifecycleHook,\n      trace,\n    };\n\n    if (vm && options.attachProps) {\n      // Vue2 - $options.propsData\n      // Vue3 - $props\n      metadata.propsData = vm.$options.propsData || vm.$props;\n    }\n\n    // Capture exception in the next event loop, to make sure that all breadcrumbs are recorded in time.\n    setTimeout(() => {\n      getCurrentHub().withScope(scope => {\n        scope.setContext('vue', metadata);\n        getCurrentHub().captureException(error);\n      });\n    });\n\n    if (typeof errorHandler === 'function') {\n      (errorHandler as UnknownFunc).call(app, error, vm, lifecycleHook);\n    }\n\n    if (options.logErrors) {\n      const hasConsole = typeof console !== 'undefined';\n      const message = `Error in ${lifecycleHook}: \"${error && error.toString()}\"`;\n\n      if (warnHandler) {\n        (warnHandler as UnknownFunc).call(null, message, vm, trace);\n      } else if (hasConsole && !silent) {\n        // eslint-disable-next-line no-console\n        console.error(`[Vue warn]: ${message}${trace}`);\n      }\n    }\n  };\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { captureException } from '@sentry/browser';\nimport { Transaction, TransactionContext } from '@sentry/types';\n\nexport type VueRouterInstrumentation = <T extends Transaction>(\n  startTransaction: (context: TransactionContext) => T | undefined,\n  startTransactionOnPageLoad?: boolean,\n  startTransactionOnLocationChange?: boolean,\n) => void;\n\n// This is not great, but kinda necessary to make it work with VueRouter@3 and VueRouter@4 at the same time.\ntype Route = {\n  params: any;\n  query: any;\n  name?: any;\n  path: any;\n  matched: any[];\n};\ninterface VueRouter {\n  onError: (fn: (err: Error) => void) => void;\n  beforeEach: (fn: (to: Route, from: Route, next: () => void) => void) => void;\n}\n\n/**\n * Creates routing instrumentation for Vue Router v2\n *\n * @param router The Vue Router instance that is used\n */\nexport function vueRouterInstrumentation(router: VueRouter): VueRouterInstrumentation {\n  return (\n    startTransaction: (context: TransactionContext) => Transaction | undefined,\n    startTransactionOnPageLoad: boolean = true,\n    startTransactionOnLocationChange: boolean = true,\n  ) => {\n    router.onError(error => captureException(error));\n\n    router.beforeEach((to, from, next) => {\n      // According to docs we could use `from === VueRouter.START_LOCATION` but I couldnt get it working for Vue 2\n      // https://router.vuejs.org/api/#router-start-location\n      // https://next.router.vuejs.org/api/#start-location\n\n      // Vue2 - null\n      // Vue3 - undefined\n      const isPageLoadNavigation = from.name == null && from.matched.length === 0;\n\n      const tags = {\n        'routing.instrumentation': 'vue-router',\n      };\n      const data = {\n        params: to.params,\n        query: to.query,\n      };\n\n      if (startTransactionOnPageLoad && isPageLoadNavigation) {\n        startTransaction({\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          name: (to.name && to.name.toString()) || to.path,\n          op: 'pageload',\n          tags,\n          data,\n        });\n      }\n\n      if (startTransactionOnLocationChange && !isPageLoadNavigation) {\n        startTransaction({\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          name: (to.name && to.name.toString()) || (to.matched[0] && to.matched[0].path) || to.path,\n          op: 'navigation',\n          tags,\n          data,\n        });\n      }\n\n      next();\n    });\n  };\n}\n","import { init as browserInit, SDK_VERSION } from '@sentry/browser';\nimport { getGlobalObject, logger } from '@sentry/utils';\n\nimport { DEFAULT_HOOKS } from './constants';\nimport { attachErrorHandler } from './errorhandler';\nimport { IS_DEBUG_BUILD } from './flags';\nimport { createTracingMixins } from './tracing';\nimport { Options, TracingOptions, Vue } from './types';\n\nconst DEFAULT_CONFIG: Options = {\n  Vue: getGlobalObject<{ Vue: Vue }>().Vue,\n  attachProps: true,\n  logErrors: false,\n  hooks: DEFAULT_HOOKS,\n  timeout: 2000,\n  trackComponents: false,\n  _metadata: {\n    sdk: {\n      name: 'sentry.javascript.vue',\n      packages: [\n        {\n          name: 'npm:@sentry/vue',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    },\n  },\n};\n\n/**\n * Inits the Vue SDK\n */\nexport function init(\n  config: Partial<Omit<Options, 'tracingOptions'> & { tracingOptions: Partial<TracingOptions> }> = {},\n): void {\n  const options = {\n    ...DEFAULT_CONFIG,\n    ...config,\n  };\n\n  browserInit(options);\n\n  if (!options.Vue && !options.app) {\n    IS_DEBUG_BUILD &&\n      logger.warn(\n        'Misconfigured SDK. Vue specific errors will not be captured.\\n' +\n          'Update your `Sentry.init` call with an appropriate config option:\\n' +\n          '`app` (Application Instance - Vue 3) or `Vue` (Vue Constructor - Vue 2).',\n      );\n    return;\n  }\n\n  if (options.app) {\n    const apps = Array.isArray(options.app) ? options.app : [options.app];\n    apps.forEach(app => vueInit(app, options));\n  } else if (options.Vue) {\n    vueInit(options.Vue, options);\n  }\n}\n\nconst vueInit = (app: Vue, options: Options): void => {\n  attachErrorHandler(app, options);\n\n  if ('tracesSampleRate' in options || 'tracesSampler' in options) {\n    app.mixin(\n      createTracingMixins({\n        ...options,\n        ...options.tracingOptions,\n      }),\n    );\n  }\n};\n","import { getCurrentHub } from '@sentry/browser';\nimport { Span, Transaction } from '@sentry/types';\nimport { logger, timestampInSeconds } from '@sentry/utils';\n\nimport { formatComponentName } from './components';\nimport { DEFAULT_HOOKS } from './constants';\nimport { IS_DEBUG_BUILD } from './flags';\nimport { Hook, Operation, TracingOptions, ViewModel, Vue } from './types';\n\nconst VUE_OP = 'ui.vue';\n\ntype Mixins = Parameters<Vue['mixin']>[0];\n\ninterface VueSentry extends ViewModel {\n  readonly $root: VueSentry;\n  $_sentrySpans?: {\n    [key: string]: Span;\n  };\n  $_sentryRootSpan?: Span;\n  $_sentryRootSpanTimer?: ReturnType<typeof setTimeout>;\n}\n\n// Mappings from operation to corresponding lifecycle hook.\nconst HOOKS: { [key in Operation]: Hook[] } = {\n  activate: ['activated', 'deactivated'],\n  create: ['beforeCreate', 'created'],\n  destroy: ['beforeDestroy', 'destroyed'],\n  mount: ['beforeMount', 'mounted'],\n  update: ['beforeUpdate', 'updated'],\n};\n\n/** Grabs active transaction off scope, if any */\nfunction getActiveTransaction(): Transaction | undefined {\n  return getCurrentHub().getScope()?.getTransaction();\n}\n\n/** Finish top-level span and activity with a debounce configured using `timeout` option */\nfunction finishRootSpan(vm: VueSentry, timestamp: number, timeout: number): void {\n  if (vm.$_sentryRootSpanTimer) {\n    clearTimeout(vm.$_sentryRootSpanTimer);\n  }\n\n  vm.$_sentryRootSpanTimer = setTimeout(() => {\n    if (vm.$root?.$_sentryRootSpan) {\n      vm.$root.$_sentryRootSpan.finish(timestamp);\n      vm.$root.$_sentryRootSpan = undefined;\n    }\n  }, timeout);\n}\n\nexport const createTracingMixins = (options: TracingOptions): Mixins => {\n  const hooks = (options.hooks || [])\n    .concat(DEFAULT_HOOKS)\n    // Removing potential duplicates\n    .filter((value, index, self) => self.indexOf(value) === index);\n\n  const mixins: Mixins = {};\n\n  for (const operation of hooks) {\n    // Retrieve corresponding hooks from Vue lifecycle.\n    // eg. mount => ['beforeMount', 'mounted']\n    const internalHooks = HOOKS[operation];\n    if (!internalHooks) {\n      IS_DEBUG_BUILD && logger.warn(`Unknown hook: ${operation}`);\n      continue;\n    }\n\n    for (const internalHook of internalHooks) {\n      mixins[internalHook] = function (this: VueSentry) {\n        const isRoot = this.$root === this;\n\n        if (isRoot) {\n          const activeTransaction = getActiveTransaction();\n          if (activeTransaction) {\n            this.$_sentryRootSpan =\n              this.$_sentryRootSpan ||\n              activeTransaction.startChild({\n                description: 'Application Render',\n                op: VUE_OP,\n              });\n          }\n        }\n\n        // Skip components that we don't want to track to minimize the noise and give a more granular control to the user\n        const name = formatComponentName(this, false);\n        const shouldTrack = Array.isArray(options.trackComponents)\n          ? options.trackComponents.includes(name)\n          : options.trackComponents;\n\n        // We always want to track root component\n        if (!isRoot && !shouldTrack) {\n          return;\n        }\n\n        this.$_sentrySpans = this.$_sentrySpans || {};\n\n        // Start a new span if current hook is a 'before' hook.\n        // Otherwise, retrieve the current span and finish it.\n        if (internalHook == internalHooks[0]) {\n          const activeTransaction = this.$root?.$_sentryRootSpan || getActiveTransaction();\n          if (activeTransaction) {\n            this.$_sentrySpans[operation] = activeTransaction.startChild({\n              description: `Vue <${name}>`,\n              op: `${VUE_OP}.${operation}`,\n            });\n          }\n        } else {\n          // The span should already be added via the first handler call (in the 'before' hook)\n          const span = this.$_sentrySpans[operation];\n          // The before hook did not start the tracking span, so the span was not added.\n          // This is probably because it happened before there is an active transaction\n          if (!span) return;\n\n          span.finish();\n          finishRootSpan(this, timestampInSeconds(), options.timeout);\n        }\n      };\n    }\n  }\n\n  return mixins;\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport { App } from 'vue'\nimport { Router } from 'vue-router'\nimport * as Sentry from '@sentry/vue'\nimport { BrowserTracing } from '@sentry/tracing'\nimport { ElMessageBox, ElNotification } from 'element-plus'\nimport 'element-plus/theme-chalk/el-notification.css'\n\nimport { eventToSentryRequest, sessionToSentryRequest } from '@sentry/core'\nimport { Event, Response, SentryRequest, Session, TransportOptions } from '@sentry/types'\nimport { SentryError, supportsReferrerPolicy, SyncPromise } from '@sentry/utils'\nimport { BaseTransport } from '@sentry/browser/esm/transports/base'\nimport { FetchImpl, getNativeFetchImplementation } from '@sentry/browser/esm/transports/utils'\nimport { apibase } from './apibase'\n\nexport async function init(app: App, router: Router) {\n    document.head.appendChild(document.createElement('script')).src =\n        'https://hm.baidu.com/hm.js?9fa0c980766e6a8646c0f814aa40b130'\n    ;((window, website, root) => {\n        const {\n            screen: { width, height },\n            navigator: { language },\n            location,\n            document,\n            history,\n        } = window\n        const { hostname, pathname, search } = location\n        const _data = 'data-'\n        const endpoint = `${root}/ev`\n        const screen = `${width}x${height}`\n        const eventRegex = /data-x-ev-([\\w-_]+)/\n        const eventNameAttribute = _data + 'x-ev'\n        const delayDuration = 300\n\n        /* Helper functions */\n\n        const hook = (_this: any, method: any, callback: any) => {\n            const orig = _this[method]\n\n            return (...args: any[]) => {\n                callback(...args)\n                return orig.apply(_this, args)\n            }\n        }\n\n        const getPath = (url: string) => {\n            if (url.substring(0, 4) === 'http') {\n                return '/' + url.split('/').splice(3).join('/')\n            }\n            return url\n        }\n\n        const getPayload = () => ({\n            website,\n            hostname,\n            screen,\n            language,\n            title: document.title,\n            url: currentUrl,\n            referrer: currentRef,\n        })\n\n        /* Tracking functions */\n\n        const trackingDisabled = () => {\n            // @ts-expect-error\n            const { doNotTrack, navigator, external } = window\n\n            const msTrackProtection = 'msTrackingProtectionEnabled'\n            const msTracking = () => {\n                // @ts-expect-error\n                return external && msTrackProtection in external && external[msTrackProtection]()\n            }\n\n            // @ts-expect-error\n            const dnt = doNotTrack || navigator.doNotTrack || navigator.msDoNotTrack || msTracking()\n\n            return dnt == '1' || dnt === 'yes'\n        }\n\n        const handlePush = (_state: unknown, title: string, url: string) => {\n            if (!url) return\n\n            currentRef = currentUrl\n            currentUrl = getPath(url.toString())\n\n            if (currentUrl !== currentRef) {\n                setTimeout(track, delayDuration)\n            }\n        }\n\n        const handleClick = () => {\n            const trackElement = (el: HTMLElement): any => {\n                const attr = el.getAttribute.bind(el)\n                const eventName = attr(eventNameAttribute)\n\n                if (eventName) {\n                    const eventData = {} as Record<string, any>\n\n                    el.getAttributeNames().forEach((name: string) => {\n                        const match = name.match(eventRegex)\n\n                        if (match) {\n                            eventData[match[1]] = attr(name)\n                        }\n                    })\n\n                    return track(eventName, { data: eventData })\n                }\n                return Promise.resolve()\n            }\n\n            const callback = (e: any) => {\n                const findATagParent = (rootElem: HTMLElement | null, maxSearchDepth: number) => {\n                    let currentElement = rootElem\n                    for (let i = 0; i < maxSearchDepth; i++) {\n                        if (currentElement?.tagName === 'A') {\n                            return currentElement\n                        }\n                        currentElement = currentElement?.parentElement || null\n                        if (!currentElement) {\n                            return null\n                        }\n                    }\n                    return null\n                }\n\n                const el = e.target\n                const anchor = el.tagName === 'A' ? el : findATagParent(el, 10)\n\n                if (anchor) {\n                    const { href, target } = anchor\n                    const external =\n                        target === '_blank' || e.ctrlKey || e.shiftKey || e.metaKey || (e.button && e.button === 1)\n                    const eventName = anchor.getAttribute(eventNameAttribute)\n\n                    if (eventName && href) {\n                        if (!external) {\n                            e.preventDefault()\n                        }\n                        return trackElement(anchor).then(() => {\n                            if (!external) location.href = href\n                        })\n                    }\n                } else {\n                    trackElement(el)\n                }\n            }\n\n            document.addEventListener('click', callback, true)\n        }\n\n        const send = (payload: any) => {\n            if (trackingDisabled()) return\n            const headers = {\n                'Content-Type': 'application/json',\n            } as Record<string, string>\n            if (typeof cache !== 'undefined') {\n                headers['x-ev-cache'] = cache\n            }\n            return fetch(endpoint, {\n                method: 'POST',\n                body: JSON.stringify({ type: 'event', payload }),\n                headers,\n            })\n                .then((res) => res.text())\n                .then((text) => {\n                    cache = text\n                })\n        }\n\n        const track = (obj?: any, data?: any) => {\n            if (typeof obj === 'string') {\n                return send({\n                    ...getPayload(),\n                    name: obj,\n                    data: typeof data === 'object' ? data : undefined,\n                })\n            } else if (typeof obj === 'object') {\n                return send(obj)\n            } else if (typeof obj === 'function') {\n                return send(obj(getPayload()))\n            }\n            return send(getPayload())\n        }\n\n        // @ts-expect-error\n        if (!window.$ev) {\n            // @ts-expect-error\n            window.$ev = (obj, data) => track(obj, data)\n        }\n\n        let currentUrl = `${pathname}${search}`\n        let currentRef = document.referrer\n        let cache: string\n        let initialized: boolean\n\n        if (!trackingDisabled()) {\n            history.pushState = hook(history, 'pushState', handlePush)\n            history.replaceState = hook(history, 'replaceState', handlePush)\n            handleClick()\n            const init = () => {\n                if (document.readyState === 'complete' && !initialized) {\n                    track()\n                    initialized = true\n                }\n            }\n            document.addEventListener('readystatechange', init, true)\n            init()\n        }\n    })(window, '8dd6307d-d7ff-4b0a-be63-4e6f9520334e', await apibase('', 'global'))\n\n    Sentry.init({\n        app,\n        dsn: process.env.VUE_APP_SENTRY,\n        integrations: [\n            new BrowserTracing({\n                routingInstrumentation: Sentry.vueRouterInstrumentation(router),\n                tracingOrigins: ['77.cocogoat.work', '77.cocogoat.cn', /^\\//],\n            }),\n        ],\n        tracesSampleRate: 0.5,\n        release: process.env.VUE_APP_GIT_SHA,\n        environment: process.env.VUE_APP_SINGLEFILE === 'true' ? 'singlefile' : process.env.NODE_ENV,\n        transport: SimpleFetchTransport,\n    })\n}\nlet currentEmail = ''\nexport async function setUser(email: string) {\n    if (currentEmail) return\n    currentEmail = email\n    Sentry.setUser({\n        email,\n    })\n}\n\nexport async function report() {\n    let input\n    try {\n        input = await ElMessageBox.prompt('请在下方输入您的问题。程序日志将被同时提交。', '上传日志', {\n            inputType: 'textarea',\n            inputPlaceholder: '点击 xxx 之后，yyy 就崩溃了。',\n        })\n    } catch (e) {\n        return\n    }\n    if (!input.value) return\n    const comments = input.value\n    const evid = Sentry.captureMessage('用户反馈：\\n' + comments)\n    const u = new URL(process.env.VUE_APP_SENTRY || '')\n    u.username = ''\n    u.password = ''\n    u.pathname = u.pathname.split('/').slice(0, -1).join('/') + '/api/embed/error-page/'\n    u.searchParams.set('eventId', evid)\n    console.log(comments)\n\n    const reportData = {\n        name: 'anonymous-report',\n        email: currentEmail || `anonymous-report@cocogoat.work`,\n        comments,\n    }\n    try {\n        const res = await fetch(u.toString(), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: new URLSearchParams(reportData).toString(),\n        })\n        if (res.ok) {\n            ElNotification({\n                title: '日志已上传',\n                message: 'ID: ' + evid + ' 请将此 ID 提交给开发者，否则无法解决任何问题。',\n                type: 'success',\n                customClass: 'feedback-notification',\n                duration: 0,\n            })\n        } else {\n            throw new Error('Got a non-200 response')\n        }\n    } catch (e) {\n        ElNotification({\n            title: '反馈提交失败',\n            message: (e as Error).message,\n            type: 'error',\n        })\n    }\n}\n\n/* Sentry Transport */\nexport class SimpleFetchTransport extends BaseTransport {\n    /**\n     * Fetch API reference which always points to native browser implementation.\n     */\n    private _fetch: typeof fetch\n\n    public constructor(options: TransportOptions, fetchImpl: FetchImpl = getNativeFetchImplementation()) {\n        super(options)\n        this._fetch = fetchImpl\n    }\n\n    /**\n     * @inheritDoc\n     */\n    public sendEvent(event: Event): PromiseLike<Response> {\n        return this._sendRequest(eventToSentryRequest(event, this._api), event)\n    }\n\n    /**\n     * @inheritDoc\n     */\n    public sendSession(session: Session): PromiseLike<Response> {\n        return this._sendRequest(sessionToSentryRequest(session, this._api), session)\n    }\n\n    /**\n     * @param sentryRequest Prepared SentryRequest to be delivered\n     * @param originalPayload Original payload used to create SentryRequest\n     */\n    _sendRequest(sentryRequest: SentryRequest, originalPayload: Event | Session): PromiseLike<Response> {\n        if (this._isRateLimited(sentryRequest.type)) {\n            this.recordLostEvent('ratelimit_backoff', sentryRequest.type)\n            const err = {\n                name: 'SentryError',\n                message: 'too many requests',\n                event: originalPayload,\n                type: sentryRequest.type,\n                reason: `Transport for ${sentryRequest.type} requests locked till ${this._disabledUntil(\n                    sentryRequest.type,\n                )} due to too many requests.`,\n                status: 429,\n            } as Error\n            return Promise.reject(err)\n        }\n\n        const options: RequestInit = {\n            body: sentryRequest.body,\n            method: 'POST',\n            // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n            // https://caniuse.com/#feat=referrer-policy\n            // It doesn't. And it throw exception instead of ignoring this parameter...\n            // REF: https://github.com/getsentry/raven-js/issues/1233\n            referrerPolicy: (supportsReferrerPolicy() ? 'origin' : '') as ReferrerPolicy,\n        }\n        if (this.options.fetchParameters !== undefined) {\n            Object.assign(options, this.options.fetchParameters)\n        }\n        if (this.options.headers !== undefined) {\n            options.headers = this.options.headers\n        }\n\n        return this._buffer\n            .add(\n                () =>\n                    new SyncPromise<Response>((resolve, reject) => {\n                        this._fetch(sentryRequest.url.replace(/sentry_(.*?)=/g, 'f9f3bed2daf73dc6_$1='), options)\n                            .then((response) => {\n                                const headers = {\n                                    'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n                                    'retry-after': response.headers.get('Retry-After'),\n                                }\n                                this._handleResponse({\n                                    requestType: sentryRequest.type,\n                                    response,\n                                    headers,\n                                    resolve,\n                                    reject,\n                                })\n                            })\n                            .catch(reject)\n                    }),\n            )\n            .then(undefined, (reason) => {\n                // It's either buffer rejection or any other xhr/fetch error, which are treated as NetworkError.\n                if (reason instanceof SentryError) {\n                    this.recordLostEvent('queue_overflow', sentryRequest.type)\n                } else {\n                    this.recordLostEvent('network_error', sentryRequest.type)\n                }\n                throw reason\n            })\n    }\n}\n"],"names":["IS_DEBUG_BUILD","__SENTRY_DEBUG__","makePromiseBuffer","limit","buffer","isReady","undefined","length","remove","task","splice","indexOf","add","taskProducer","rejectedSyncPromise","SentryError","push","then","drain","timeout","SyncPromise","resolve","reject","counter","capturedSetTimeout","setTimeout","forEach","item","resolvedSyncPromise","clearTimeout","$","createClientReportEnvelope","discarded_events","dsn","timestamp","clientReportItem","type","dateTimestampInSeconds","createEnvelope","eventStatusFromHttpCode","code","DEFAULT_RETRY_AFTER","parseRetryAfterHeader","header","now","Date","headerDelay","parseInt","isNaN","headerDate","parse","disabledUntil","limits","category","all","isRateLimited","updateRateLimits","headers","updatedRateLimits","rateLimitHeader","retryAfterHeader","trim","split","_d","parameters","delay","_f","requestTypeToCategory","ty","tyStr","global","getGlobalObject","options","_buffer","_rateLimits","_outcomes","this","_api","initAPIDetails","_metadata","tunnel","url","getStoreEndpointWithUrlEncodedAuth","sendClientReports","document","addEventListener","visibilityState","_this","_flushOutcomes","BaseTransport","event","_sendRequest","eventToSentryRequest","session","sessionToSentryRequest","reason","key","logger","_a","outcomes","Object","keys","JSON","stringify","getEnvelopeEndpointWithUrlEncodedAuth","discardedEvents","map","quantity","envelope","dsnToString","sendReport","serializeEnvelope","e","requestType","response","status","_isRateLimited","_disabledUntil","forget","promise","console","error","cachedFetchImpl","getNativeFetchImplementation","isNativeFetch","fetch","bind","fetchImpl","createElement","sandbox","hidden","head","appendChild","contentWindow","removeChild","body","isRealNavigator","prototype","toString","call","navigator","hasSendBeacon","sendBeacon","supportsFetch","fetch_1","method","credentials","keepalive","SENTRY_API_VERSION","metadata","_dsnObject","makeDsn","_tunnel","API","getBaseApiEndpoint","getStoreEndpoint","initDsn","protocol","port","host","path","_getIngestEndpoint","target","projectId","_encodedAuth","urlEncode","sentry_key","publicKey","sentry_version","_getEnvelopeEndpoint","memoBuilder","hasWeakSet","WeakSet","inner","memoize","obj","has","i","value","unmemoize","delete","defaultFunctionName","getFunctionName","fn","name","normalize","input","depth","maxProperties","Infinity","visit","err","ERROR","memo","valueWithToJSON","toJSON","includes","stringified","stringifyValue","startsWith","replace","normalized","Array","isArray","numAdded","visitable","isError","isEvent","convertToPlainObject","visitKey","hasOwnProperty","visitValue","_events","window","isSyntheticEvent","String","getPrototypeOf","constructor","getSdkMetadataForEnvelopeHeader","api","sdk","version","enhanceEventWithSdkInfo","sdkInfo","integrations","__spread","packages","createSessionEnvelope","envelopeHeaders","sent_at","toISOString","envelopeItem","eventType","useEnvelope","transactionSampling","samplingMethod","sampleRate","tags","extra","sdkProcessingMetadata","baseClientNormalized","skippedNormalization","normalizeDepth","JSONStringifyError","newErr","innerErr","message","stack","req","event_id","eventItem","sample_rates","id","rate","DSN_REGEX","isValidProtocol","withPassword","pass","dsnFromString","str","match","exec","_b","_c","lastPath","slice","join","pop","projectMatch","dsnFromComponents","components","user","validateDsn","requiredComponents","component","from","items","serializedHeaders","reduce","acc","itemHeaders","payload","serializedPayload","isPrimitive","setPrototypeOf","__proto__","setProtoOf","mixinProperties","proto","prop","_super","_newTarget","__extends","Error","fallbackGlobalObject","isNodeEnv","self","getGlobalSingleton","creator","__SENTRY__","singleton","objectToString","wat","isInstanceOf","isBuiltin","isString","isPlainObject","Event","isElement","Element","isThenable","Boolean","base","_e","PREFIX","CONSOLE_LEVELS","consoleSandbox","callback","originalConsole","wrappedLevels","level","originalWrappedFunc","__sentry_original__","makeLogger","enabled","enable","disable","args","apply","isBrowserBundle","__SENTRY_BROWSER_BUNDLE__","process","dynamicRequire","mod","request","require","htmlTreeAsString","elem","keyAttrs","currentElem","MAX_TRAVERSE_HEIGHT","MAX_OUTPUT_LEN","out","height","len","separator","sepLength","nextStr","_htmlElementAsString","parentNode","reverse","_oO","el","className","classes","attr","tagName","toLowerCase","keyAttrPairs","filter","keyAttr","getAttribute","keyAttrPair","allowedAttrs","object","encodeURIComponent","newObj","getOwnProperties","event_1","serializeEventTarget","currentTarget","CustomEvent","detail","extractedProps","property","Headers","Request","Response","func","test","supportsReferrerPolicy","referrerPolicy","_","executor","_state","_handlers","_resolve","_setResult","_reject","state","_value","_executeHandlers","cachedHandlers","handler","onfulfilled","onrejected","result","val","onfinally","isRejected","dateTimestampSource","nowSeconds","getBrowserPerformance","performance","timeOrigin","getNodePerformance","perfHooks","module","platformPerformance","timestampSource","timestampInSeconds","threshold","performanceNow","dateNow","timeOriginDelta","Math","abs","timeOriginIsReliable","navigationStart","timing","hasNavigationStart","navigationStartDelta","navigationStartIsReliable","classifyRE","classify","c","toUpperCase","ROOT_COMPONENT_NAME","ANONYMOUS_COMPONENT_NAME","repeat","n","res","formatComponentName","vm","includeFile","$root","$options","_componentTag","file","__file","generateComponentTrace","_isVue","__isVue","$parent","tree","currentRecursiveSequence","last","formattedTree","DEFAULT_HOOKS","attachErrorHandler","app","errorHandler","warnHandler","silent","config","lifecycleHook","componentName","trace","attachProps","propsData","$props","getCurrentHub","withScope","scope","setContext","captureException","logErrors","hasConsole","vueRouterInstrumentation","router","startTransaction","startTransactionOnPageLoad","startTransactionOnLocationChange","onError","beforeEach","to","next","isPageLoadNavigation","matched","data","params","query","op","DEFAULT_CONFIG","Vue","hooks","trackComponents","SDK_VERSION","init","browserInit","apps","vueInit","mixin","createTracingMixins","tracingOptions","VUE_OP","HOOKS","activate","create","destroy","mount","update","getActiveTransaction","getScope","getTransaction","finishRootSpan","$_sentryRootSpanTimer","$_sentryRootSpan","finish","concat","index","mixins","operation","internalHooks","internalHook","isRoot","activeTransaction","startChild","description","shouldTrack","$_sentrySpans","span","internalHooks_1_1","hooks_1_1","extendStatics","d","b","p","__","__assign","assign","t","s","arguments","__values","o","Symbol","iterator","m","done","TypeError","__read","r","ar","async","src","website","root","screen","width","language","location","history","hostname","pathname","search","_data","endpoint","eventRegex","eventNameAttribute","delayDuration","hook","orig","getPath","substring","getPayload","title","currentUrl","referrer","currentRef","trackingDisabled","doNotTrack","external","msTrackProtection","msTracking","dnt","msDoNotTrack","handlePush","track","handleClick","trackElement","eventName","eventData","getAttributeNames","Promise","findATagParent","rootElem","maxSearchDepth","currentElement","parentElement","anchor","href","ctrlKey","shiftKey","metaKey","button","preventDefault","send","cache","text","$ev","initialized","pushState","replaceState","readyState","apibase","Sentry","BrowserTracing","routingInstrumentation","tracingOrigins","tracesSampleRate","release","environment","transport","SimpleFetchTransport","currentEmail","setUser","email","report","ElMessageBox","inputType","inputPlaceholder","comments","evid","u","URL","username","password","searchParams","set","log","reportData","URLSearchParams","ok","ElNotification","customClass","duration","super","_fetch","sendEvent","sendSession","sentryRequest","originalPayload","recordLostEvent","fetchParameters","get","_handleResponse","catch"],"sourceRoot":""}