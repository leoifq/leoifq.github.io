{"version":3,"file":"static/js/9409.2d3ec220.js","mappings":"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","sources":["webpack://cocogoat-web/../../../../../packages/components/collection/src/collection.vue","webpack://cocogoat-web/../../../../../packages/components/collection/src/collection-item.vue","webpack://cocogoat-web/../../../../../packages/components/collection/src/collection.ts","webpack://cocogoat-web/../../../../../packages/components/dropdown/src/tokens.ts","webpack://cocogoat-web/../../../../../packages/components/roving-focus-group/src/roving-focus-group.ts","webpack://cocogoat-web/../../../../../packages/components/roving-focus-group/src/tokens.ts","webpack://cocogoat-web/../../../../../packages/components/roving-focus-group/src/utils.ts","webpack://cocogoat-web/../../../../../packages/components/roving-focus-group/src/roving-focus-group-impl.vue","webpack://cocogoat-web/../../../../../packages/components/roving-focus-group/src/roving-focus-group.vue","webpack://cocogoat-web/../../../../../packages/components/dropdown/src/dropdown.vue","webpack://cocogoat-web/../../../../../packages/components/dropdown/src/dropdown-item-impl.vue","webpack://cocogoat-web/../../../../../packages/components/dropdown/src/useDropdown.ts","webpack://cocogoat-web/../../../../../packages/components/roving-focus-group/src/roving-focus-item.vue","webpack://cocogoat-web/../../../../../packages/components/dropdown/src/dropdown-item.vue","webpack://cocogoat-web/../../../../../packages/components/dropdown/src/dropdown-menu.vue","webpack://cocogoat-web/../../../../../packages/components/dropdown/index.ts","webpack://cocogoat-web/../../../../../packages/components/dropdown/src/dropdown.ts","webpack://cocogoat-web/../../../../../packages/utils/vue/refs.ts"],"sourcesContent":["<template>\n  <slot />\n</template>\n\n<script lang=\"ts\" setup>\ndefineOptions({\n  inheritAttrs: false,\n})\n</script>\n","<template>\n  <slot />\n</template>\n\n<script lang=\"ts\" setup>\ndefineOptions({\n  name: 'ElCollectionItem',\n  inheritAttrs: false,\n})\n</script>\n","import { inject, onBeforeUnmount, onMounted, provide, ref, unref } from 'vue'\nimport Collection from './collection.vue'\nimport CollectionItem from './collection-item.vue'\n\nimport type { InjectionKey } from 'vue'\nimport type { SetupContext } from '@vue/runtime-core'\nimport type {\n  ElCollectionInjectionContext,\n  ElCollectionItemInjectionContext,\n} from './tokens'\n\nexport const COLLECTION_ITEM_SIGN = `data-el-collection-item`\n\n// Make sure the first letter of name is capitalized\nexport const createCollectionWithScope = (name: string) => {\n  const COLLECTION_NAME = `El${name}Collection`\n  const COLLECTION_ITEM_NAME = `${COLLECTION_NAME}Item`\n  const COLLECTION_INJECTION_KEY: InjectionKey<ElCollectionInjectionContext> =\n    Symbol(COLLECTION_NAME)\n  const COLLECTION_ITEM_INJECTION_KEY: InjectionKey<ElCollectionItemInjectionContext> =\n    Symbol(COLLECTION_ITEM_NAME)\n\n  const ElCollection = {\n    ...Collection,\n    name: COLLECTION_NAME,\n    setup() {\n      const collectionRef = ref<HTMLElement | null>(null)\n      const itemMap: ElCollectionInjectionContext['itemMap'] = new Map()\n      const getItems = () => {\n        const collectionEl = unref(collectionRef)\n\n        if (!collectionEl) return []\n        const orderedNodes = Array.from(\n          collectionEl.querySelectorAll(`[${COLLECTION_ITEM_SIGN}]`)\n        )\n\n        const items = [...itemMap.values()]\n\n        return items.sort(\n          (a, b) => orderedNodes.indexOf(a.ref!) - orderedNodes.indexOf(b.ref!)\n        )\n      }\n\n      provide(COLLECTION_INJECTION_KEY, {\n        itemMap,\n        getItems,\n        collectionRef,\n      })\n    },\n  }\n\n  const ElCollectionItem = {\n    ...CollectionItem,\n    name: COLLECTION_ITEM_NAME,\n    setup(_: unknown, { attrs }: SetupContext) {\n      const collectionItemRef = ref<HTMLElement | null>(null)\n      const collectionInjection = inject(COLLECTION_INJECTION_KEY, undefined)!\n\n      provide(COLLECTION_ITEM_INJECTION_KEY, {\n        collectionItemRef,\n      })\n\n      onMounted(() => {\n        const collectionItemEl = unref(collectionItemRef)\n        if (collectionItemEl) {\n          collectionInjection.itemMap.set(collectionItemEl, {\n            ref: collectionItemEl,\n            ...attrs,\n          })\n        }\n      })\n\n      onBeforeUnmount(() => {\n        const collectionItemEl = unref(collectionItemRef)!\n        collectionInjection.itemMap.delete(collectionItemEl)\n      })\n    },\n  }\n\n  return {\n    COLLECTION_INJECTION_KEY,\n    COLLECTION_ITEM_INJECTION_KEY,\n    ElCollection,\n    ElCollectionItem,\n  }\n}\n","import type { ComputedRef, InjectionKey, Ref } from 'vue'\n\nexport type ElDropdownInjectionContext = {\n  contentRef: Ref<HTMLElement | null>\n  role: ComputedRef<string>\n  triggerId: ComputedRef<string>\n  isUsingKeyboard: Ref<boolean>\n  onItemLeave: (e: PointerEvent) => void\n  onItemEnter: (e: PointerEvent) => void\n}\n\nexport const DROPDOWN_INJECTION_KEY: InjectionKey<ElDropdownInjectionContext> =\n  Symbol('elDropdown')\n","import { buildProps, definePropType } from '@element-plus/utils'\nimport { createCollectionWithScope } from '@element-plus/components/collection'\nimport type { ExtractPropTypes, HTMLAttributes, StyleValue } from 'vue'\n\nexport const rovingFocusGroupProps = buildProps({\n  style: { type: definePropType<StyleValue>([String, Array, Object]) },\n  currentTabId: {\n    type: definePropType<string | null>(String),\n  },\n  defaultCurrentTabId: String,\n  loop: Boolean,\n  dir: {\n    type: String, // left for direction support\n    values: ['ltr', 'rtl'],\n    default: 'ltr',\n  },\n  orientation: {\n    // left for orientation support\n    type: definePropType<HTMLAttributes['aria-orientation']>(String),\n  },\n\n  onBlur: Function,\n  onFocus: Function,\n  onMousedown: Function,\n})\n\nexport type ElRovingFocusGroupProps = ExtractPropTypes<\n  typeof rovingFocusGroupProps\n>\n\nconst {\n  ElCollection,\n  ElCollectionItem,\n  COLLECTION_INJECTION_KEY,\n  COLLECTION_ITEM_INJECTION_KEY,\n} = createCollectionWithScope('RovingFocusGroup')\n\nexport {\n  ElCollection,\n  ElCollectionItem,\n  COLLECTION_INJECTION_KEY as ROVING_FOCUS_COLLECTION_INJECTION_KEY,\n  COLLECTION_ITEM_INJECTION_KEY as ROVING_FOCUS_ITEM_COLLECTION_INJECTION_KEY,\n}\n","import type { InjectionKey, Ref, StyleValue } from 'vue'\nimport type { ElRovingFocusGroupProps } from './roving-focus-group'\n\ntype EventHandler<T = Event> = (e: T) => void\n\nexport type RovingGroupInjectionContext = {\n  currentTabbedId: Ref<string | null>\n  dir: Ref<ElRovingFocusGroupProps['dir']>\n  loop: Ref<ElRovingFocusGroupProps['loop']>\n  orientation: Ref<ElRovingFocusGroupProps['orientation']>\n  tabIndex: Ref<number>\n  rovingFocusGroupRef: Ref<HTMLElement | null>\n  rovingFocusGroupRootStyle: Ref<StyleValue>\n  onBlur: EventHandler\n  onFocus: EventHandler<FocusEvent>\n  onMousedown: EventHandler\n  onItemFocus: (id: string) => void\n  onItemShiftTab: () => void\n}\n\nexport type RovingFocusGroupItemInjectionContext = {\n  rovingFocusGroupItemRef: Ref<HTMLElement | null>\n  tabIndex: Ref<number>\n  handleMousedown: EventHandler\n  handleFocus: EventHandler\n  handleKeydown: EventHandler\n}\n\nexport const ROVING_FOCUS_GROUP_INJECTION_KEY: InjectionKey<RovingGroupInjectionContext> =\n  Symbol('elRovingFocusGroup')\n\nexport const ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY: InjectionKey<RovingFocusGroupItemInjectionContext> =\n  Symbol('elRovingFocusGroupItem')\n","import { EVENT_CODE } from '@element-plus/constants'\nimport type { HTMLAttributes } from 'vue'\n\ntype Orientation = HTMLAttributes['aria-orientation']\ntype Direction = 'ltr' | 'rtl'\ntype FocusIntent = 'first' | 'last' | 'prev' | 'next'\n\nconst MAP_KEY_TO_FOCUS_INTENT: Record<string, FocusIntent> = {\n  ArrowLeft: 'prev',\n  ArrowUp: 'prev',\n  ArrowRight: 'next',\n  ArrowDown: 'next',\n  PageUp: 'first',\n  Home: 'first',\n  PageDown: 'last',\n  End: 'last',\n}\n\nconst getDirectionAwareKey = (key: string, dir?: Direction) => {\n  if (dir !== 'rtl') return key\n\n  switch (key) {\n    case EVENT_CODE.right:\n      return EVENT_CODE.left\n    case EVENT_CODE.left:\n      return EVENT_CODE.right\n    default:\n      return key\n  }\n}\n\nexport const getFocusIntent = (\n  event: KeyboardEvent,\n  orientation?: Orientation,\n  dir?: Direction\n) => {\n  const key = getDirectionAwareKey(event.key, dir)\n  if (\n    orientation === 'vertical' &&\n    [EVENT_CODE.left, EVENT_CODE.right].includes(key)\n  )\n    return undefined\n  if (\n    orientation === 'horizontal' &&\n    [EVENT_CODE.up, EVENT_CODE.down].includes(key)\n  )\n    return undefined\n  return MAP_KEY_TO_FOCUS_INTENT[key]\n}\n\nexport const reorderArray = <T>(array: T[], atIdx: number) => {\n  return array.map((_, idx) => array[(idx + atIdx) % array.length])\n}\n\nexport const focusFirst = (elements: HTMLElement[]) => {\n  const { activeElement: prevActive } = document\n\n  for (const element of elements) {\n    if (element === prevActive) return\n    element.focus()\n    if (prevActive !== document.activeElement) return\n  }\n}\n","<template>\n  <slot />\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  inject,\n  onBeforeUnmount,\n  onMounted,\n  provide,\n  readonly,\n  ref,\n  toRef,\n  unref,\n  watch,\n} from 'vue'\nimport { composeEventHandlers, off, on } from '@element-plus/utils'\nimport {\n  ROVING_FOCUS_COLLECTION_INJECTION_KEY,\n  rovingFocusGroupProps,\n} from './roving-focus-group'\nimport { ROVING_FOCUS_GROUP_INJECTION_KEY } from './tokens'\nimport { focusFirst } from './utils'\n\nimport type { StyleValue } from 'vue'\n\nconst CURRENT_TAB_ID_CHANGE_EVT = 'currentTabIdChange'\n\nconst ENTRY_FOCUS_EVT = 'rovingFocusGroup.entryFocus'\nconst EVT_OPTS: EventInit = { bubbles: false, cancelable: true }\nexport default defineComponent({\n  name: 'ElRovingFocusGroupImpl',\n  inheritAttrs: false,\n  props: rovingFocusGroupProps,\n  emits: [CURRENT_TAB_ID_CHANGE_EVT, 'entryFocus'],\n  setup(props, { emit }) {\n    const currentTabbedId = ref<string | null>(\n      (props.currentTabId || props.defaultCurrentTabId) ?? null\n    )\n    const isBackingOut = ref(false)\n    const isClickFocus = ref(false)\n    const rovingFocusGroupRef = ref<HTMLElement | null>(null)\n    const { getItems } = inject(\n      ROVING_FOCUS_COLLECTION_INJECTION_KEY,\n      undefined\n    )!\n    const rovingFocusGroupRootStyle = computed(() => {\n      // casting to any for fix compiler error since HTMLElement.StyleValue does not\n      // support CSSProperties\n      return [\n        {\n          outline: 'none',\n        },\n        props.style as StyleValue,\n      ] as any\n    })\n\n    const onItemFocus = (tabbedId: string) => {\n      emit(CURRENT_TAB_ID_CHANGE_EVT, tabbedId)\n    }\n\n    const onItemShiftTab = () => {\n      isBackingOut.value = true\n    }\n\n    const onMousedown = composeEventHandlers(\n      (e: Event) => {\n        props.onMousedown?.(e)\n      },\n      () => {\n        isClickFocus.value = true\n      }\n    )\n\n    const onFocus = composeEventHandlers(\n      (e: FocusEvent) => {\n        props.onFocus?.(e)\n      },\n      (e) => {\n        const isKeyboardFocus = !unref(isClickFocus)\n        const { target, currentTarget } = e\n        if (\n          target === currentTarget &&\n          isKeyboardFocus &&\n          !unref(isBackingOut)\n        ) {\n          const entryFocusEvt = new Event(ENTRY_FOCUS_EVT, EVT_OPTS)\n          currentTarget?.dispatchEvent(entryFocusEvt)\n\n          if (!entryFocusEvt.defaultPrevented) {\n            const items = getItems<{\n              id: string\n              focusable: boolean\n              active: boolean\n            }>().filter((item) => item.focusable)\n            const activeItem = items.find((item) => item.active)\n            const currentItem = items.find(\n              (item) => item.id === unref(currentTabbedId)\n            )\n            const candidates = [activeItem!, currentItem!, ...items].filter(\n              Boolean\n            )\n            const candidateNodes = candidates.map((item) => item.ref!)\n            focusFirst(candidateNodes)\n          }\n        }\n\n        isClickFocus.value = false\n      }\n    )\n\n    const onBlur = composeEventHandlers(\n      (e: Event) => {\n        props.onBlur?.(e)\n      },\n      () => {\n        isBackingOut.value = false\n      }\n    )\n\n    const handleEntryFocus = (...args: any[]) => {\n      emit('entryFocus', ...args)\n    }\n\n    provide(ROVING_FOCUS_GROUP_INJECTION_KEY, {\n      currentTabbedId: readonly(currentTabbedId),\n      loop: toRef(props, 'loop'),\n      tabIndex: computed(() => {\n        return unref(isBackingOut) ? -1 : 0\n      }),\n      rovingFocusGroupRef,\n      rovingFocusGroupRootStyle,\n      orientation: toRef(props, 'orientation'),\n      dir: toRef(props, 'dir'),\n      onItemFocus,\n      onItemShiftTab,\n      onBlur,\n      onFocus,\n      onMousedown,\n    })\n\n    watch(\n      () => props.currentTabId,\n      (val) => {\n        currentTabbedId.value = val ?? null\n      }\n    )\n\n    onMounted(() => {\n      const rovingFocusGroupEl = unref(rovingFocusGroupRef)!\n      on(rovingFocusGroupEl, ENTRY_FOCUS_EVT, handleEntryFocus)\n    })\n\n    onBeforeUnmount(() => {\n      const rovingFocusGroupEl = unref(rovingFocusGroupRef)!\n      off(rovingFocusGroupEl, ENTRY_FOCUS_EVT, handleEntryFocus)\n    })\n  },\n})\n</script>\n","<template>\n  <el-focus-group-collection>\n    <el-roving-focus-group-impl v-bind=\"$attrs\">\n      <slot />\n    </el-roving-focus-group-impl>\n  </el-focus-group-collection>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport ElRovingFocusGroupImpl from './roving-focus-group-impl.vue'\nimport { ElCollection as ElFocusGroupCollection } from './roving-focus-group'\n\nexport default defineComponent({\n  name: 'ElRovingFocusGroup',\n  components: {\n    ElFocusGroupCollection,\n    ElRovingFocusGroupImpl,\n  },\n})\n</script>\n","<template>\n  <div :class=\"[ns.b(), ns.is('disabled', disabled)]\">\n    <el-tooltip\n      ref=\"popperRef\"\n      :role=\"role\"\n      :effect=\"effect\"\n      :fallback-placements=\"['bottom', 'top']\"\n      :popper-options=\"popperOptions\"\n      :gpu-acceleration=\"false\"\n      :hide-after=\"trigger === 'hover' ? hideTimeout : 0\"\n      :manual-mode=\"true\"\n      :placement=\"placement\"\n      :popper-class=\"[ns.e('popper'), popperClass]\"\n      :reference-element=\"referenceElementRef?.$el\"\n      :trigger=\"trigger\"\n      :trigger-keys=\"triggerKeys\"\n      :trigger-target-el=\"contentRef\"\n      :show-after=\"trigger === 'hover' ? showTimeout : 0\"\n      :stop-popper-mouse-event=\"false\"\n      :virtual-ref=\"triggeringElementRef\"\n      :virtual-triggering=\"splitButton\"\n      :disabled=\"disabled\"\n      :transition=\"`${ns.namespace.value}-zoom-in-top`\"\n      teleported\n      pure\n      persistent\n      @show=\"handleShowTooltip\"\n      @hide=\"handleHideTooltip\"\n    >\n      <template #content>\n        <el-scrollbar\n          ref=\"scrollbar\"\n          :wrap-style=\"wrapStyle\"\n          tag=\"div\"\n          :view-class=\"ns.e('list')\"\n        >\n          <el-roving-focus-group\n            :loop=\"loop\"\n            :current-tab-id=\"currentTabId\"\n            orientation=\"horizontal\"\n            @current-tab-id-change=\"handleCurrentTabIdChange\"\n            @entry-focus=\"handleEntryFocus\"\n          >\n            <el-dropdown-collection>\n              <slot name=\"dropdown\" />\n            </el-dropdown-collection>\n          </el-roving-focus-group>\n        </el-scrollbar>\n      </template>\n      <template v-if=\"!splitButton\" #default>\n        <el-only-child :id=\"triggerId\" role=\"button\" :tabindex=\"tabindex\">\n          <slot name=\"default\" />\n        </el-only-child>\n      </template>\n    </el-tooltip>\n    <template v-if=\"splitButton\">\n      <el-button-group>\n        <el-button\n          ref=\"referenceElementRef\"\n          v-bind=\"buttonProps\"\n          :size=\"dropdownSize\"\n          :type=\"type\"\n          :disabled=\"disabled\"\n          :tabindex=\"tabindex\"\n          @click=\"handlerMainButtonClick\"\n        >\n          <slot name=\"default\" />\n        </el-button>\n        <el-button\n          :id=\"triggerId\"\n          ref=\"triggeringElementRef\"\n          v-bind=\"buttonProps\"\n          role=\"button\"\n          :size=\"dropdownSize\"\n          :type=\"type\"\n          :class=\"ns.e('caret-button')\"\n          :disabled=\"disabled\"\n          :tabindex=\"tabindex\"\n          :aria-label=\"t('el.dropdown.toggleDropdown')\"\n        >\n          <el-icon :class=\"ns.e('icon')\"><arrow-down /></el-icon>\n        </el-button>\n      </el-button-group>\n    </template>\n  </div>\n</template>\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  provide,\n  ref,\n  toRef,\n  unref,\n} from 'vue'\nimport ElButton from '@element-plus/components/button'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElIcon from '@element-plus/components/icon'\nimport ElRovingFocusGroup from '@element-plus/components/roving-focus-group'\nimport { ElOnlyChild } from '@element-plus/components/slot'\nimport { addUnit } from '@element-plus/utils'\nimport { ArrowDown } from '@element-plus/icons-vue'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { useId, useLocale, useNamespace, useSize } from '@element-plus/hooks'\nimport { ElCollection as ElDropdownCollection, dropdownProps } from './dropdown'\nimport { DROPDOWN_INJECTION_KEY } from './tokens'\n\nimport type { CSSProperties } from 'vue'\n\nconst { ButtonGroup: ElButtonGroup } = ElButton\n\nexport default defineComponent({\n  name: 'ElDropdown',\n  components: {\n    ElButton,\n    ElButtonGroup,\n    ElScrollbar,\n    ElDropdownCollection,\n    ElTooltip,\n    ElRovingFocusGroup,\n    ElOnlyChild,\n    ElIcon,\n    ArrowDown,\n  },\n  props: dropdownProps,\n  emits: ['visible-change', 'click', 'command'],\n  setup(props, { emit }) {\n    const _instance = getCurrentInstance()\n    const ns = useNamespace('dropdown')\n    const { t } = useLocale()\n\n    const triggeringElementRef = ref()\n    const referenceElementRef = ref()\n    const popperRef = ref<InstanceType<typeof ElTooltip> | null>(null)\n    const contentRef = ref<HTMLElement | null>(null)\n    const scrollbar = ref(null)\n    const currentTabId = ref<string | null>(null)\n    const isUsingKeyboard = ref(false)\n    const triggerKeys = [EVENT_CODE.enter, EVENT_CODE.space, EVENT_CODE.down]\n\n    const wrapStyle = computed<CSSProperties>(() => ({\n      maxHeight: addUnit(props.maxHeight),\n    }))\n    const dropdownTriggerKls = computed(() => [ns.m(dropdownSize.value)])\n\n    const defaultTriggerId = useId().value\n    const triggerId = computed<string>(() => {\n      return props.id || defaultTriggerId\n    })\n\n    function handleClick() {\n      handleClose()\n    }\n\n    function handleClose() {\n      popperRef.value?.onClose()\n    }\n\n    function handleOpen() {\n      popperRef.value?.onOpen()\n    }\n\n    const dropdownSize = useSize()\n\n    function commandHandler(...args: any[]) {\n      emit('command', ...args)\n    }\n\n    function onItemEnter() {\n      // NOOP for now\n    }\n\n    function onItemLeave() {\n      const contentEl = unref(contentRef)\n\n      contentEl?.focus()\n      currentTabId.value = null\n    }\n\n    function handleCurrentTabIdChange(id: string) {\n      currentTabId.value = id\n    }\n\n    function handleEntryFocus(e: Event) {\n      if (!isUsingKeyboard.value) {\n        e.preventDefault()\n        e.stopImmediatePropagation()\n      }\n    }\n\n    function handleShowTooltip(event?: Event) {\n      if (event?.type === 'keydown') {\n        contentRef.value.focus()\n      }\n      emit('visible-change', true)\n    }\n    function handleHideTooltip() {\n      emit('visible-change', false)\n    }\n\n    provide(DROPDOWN_INJECTION_KEY, {\n      contentRef,\n      role: computed(() => props.role),\n      triggerId,\n      isUsingKeyboard,\n      onItemEnter,\n      onItemLeave,\n    })\n\n    provide('elDropdown', {\n      instance: _instance,\n      dropdownSize,\n      handleClick,\n      commandHandler,\n      trigger: toRef(props, 'trigger'),\n      hideOnClick: toRef(props, 'hideOnClick'),\n    })\n\n    const onFocusAfterTrapped = (e: Event) => {\n      e.preventDefault()\n      contentRef.value?.focus?.({\n        preventScroll: true,\n      })\n    }\n\n    const handlerMainButtonClick = (event: MouseEvent) => {\n      emit('click', event)\n    }\n\n    return {\n      t,\n      ns,\n      scrollbar,\n      wrapStyle,\n      dropdownTriggerKls,\n      dropdownSize,\n      triggerId,\n      triggerKeys,\n      currentTabId,\n      handleCurrentTabIdChange,\n      handlerMainButtonClick,\n      handleEntryFocus,\n      handleClose,\n      handleOpen,\n      handleShowTooltip,\n      handleHideTooltip,\n      onFocusAfterTrapped,\n      popperRef,\n      contentRef,\n      triggeringElementRef,\n      referenceElementRef,\n    }\n  },\n})\n</script>\n","<template>\n  <li\n    v-if=\"divided\"\n    role=\"separator\"\n    :class=\"ns.bem('menu', 'item', 'divided')\"\n    v-bind=\"$attrs\"\n  />\n  <li\n    :ref=\"itemRef\"\n    v-bind=\"{ ...dataset, ...$attrs }\"\n    :aria-disabled=\"disabled\"\n    :class=\"[ns.be('menu', 'item'), ns.is('disabled', disabled)]\"\n    :tabindex=\"tabIndex\"\n    :role=\"role\"\n    @click=\"(e) => $emit('clickimpl', e)\"\n    @focus=\"handleFocus\"\n    @keydown=\"handleKeydown\"\n    @mousedown=\"handleMousedown\"\n    @pointermove=\"(e) => $emit('pointermove', e)\"\n    @pointerleave=\"(e) => $emit('pointerleave', e)\"\n  >\n    <el-icon v-if=\"icon\"><component :is=\"icon\" /></el-icon>\n    <slot />\n  </li>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject } from 'vue'\nimport {\n  ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY,\n  ROVING_FOCUS_ITEM_COLLECTION_INJECTION_KEY,\n} from '@element-plus/components/roving-focus-group'\nimport { COLLECTION_ITEM_SIGN } from '@element-plus/components/collection'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { useNamespace } from '@element-plus/hooks'\nimport { composeEventHandlers, composeRefs } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport {\n  DROPDOWN_COLLECTION_ITEM_INJECTION_KEY,\n  dropdownItemProps,\n} from './dropdown'\nimport { DROPDOWN_INJECTION_KEY } from './tokens'\n\nexport default defineComponent({\n  name: 'DropdownItemImpl',\n  components: {\n    ElIcon,\n  },\n  props: dropdownItemProps,\n  emits: ['pointermove', 'pointerleave', 'click', 'clickimpl'],\n  setup(_, { emit }) {\n    const ns = useNamespace('dropdown')\n\n    const { role: menuRole } = inject(DROPDOWN_INJECTION_KEY, undefined)!\n\n    const { collectionItemRef: dropdownCollectionItemRef } = inject(\n      DROPDOWN_COLLECTION_ITEM_INJECTION_KEY,\n      undefined\n    )!\n\n    const { collectionItemRef: rovingFocusCollectionItemRef } = inject(\n      ROVING_FOCUS_ITEM_COLLECTION_INJECTION_KEY,\n      undefined\n    )!\n\n    const {\n      rovingFocusGroupItemRef,\n      tabIndex,\n      handleFocus,\n      handleKeydown: handleItemKeydown,\n      handleMousedown,\n    } = inject(ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY, undefined)!\n\n    const itemRef = composeRefs(\n      dropdownCollectionItemRef,\n      rovingFocusCollectionItemRef,\n      rovingFocusGroupItemRef\n    )\n\n    const role = computed<string>(() => {\n      if (menuRole.value === 'menu') {\n        return 'menuitem'\n      } else if (menuRole.value === 'navigation') {\n        return 'link'\n      }\n      return 'button'\n    })\n\n    const handleKeydown = composeEventHandlers((e: KeyboardEvent) => {\n      const { code } = e\n      if (code === EVENT_CODE.enter || code === EVENT_CODE.space) {\n        e.preventDefault()\n        e.stopImmediatePropagation()\n        emit('clickimpl', e)\n        return true\n      }\n    }, handleItemKeydown)\n\n    return {\n      ns,\n      itemRef,\n      dataset: {\n        [COLLECTION_ITEM_SIGN]: '',\n      },\n      role,\n      tabIndex,\n      handleFocus,\n      handleKeydown,\n      handleMousedown,\n    }\n  },\n})\n</script>\n","import { computed, inject, ref } from 'vue'\nimport { addClass, generateId, on } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { useNamespace } from '@element-plus/hooks'\nimport type { Nullable } from '@element-plus/utils'\nimport type { IElDropdownInstance } from './dropdown'\n\nexport const useDropdown = () => {\n  const elDropdown = inject<IElDropdownInstance>('elDropdown', {})\n  const _elDropdownSize = computed(() => elDropdown?.dropdownSize)\n\n  return {\n    elDropdown,\n    _elDropdownSize,\n  }\n}\n\nexport const initDropdownDomEvent = (\n  dropdownChildren,\n  triggerElm,\n  _instance\n) => {\n  const ns = useNamespace('dropdown')\n  const menuItems = ref<Nullable<HTMLButtonElement[]>>(null)\n  const menuItemsArray = ref<Nullable<HTMLElement[]>>(null)\n  const dropdownElm = ref<Nullable<HTMLElement>>(null)\n  const listId = ref(`dropdown-menu-${generateId()}`)\n  dropdownElm.value = dropdownChildren?.subTree.el\n\n  function removeTabindex() {\n    triggerElm.setAttribute('tabindex', '-1')\n    menuItemsArray.value?.forEach((item) => {\n      item.setAttribute('tabindex', '-1')\n    })\n  }\n\n  function resetTabindex(ele) {\n    removeTabindex()\n    ele?.setAttribute('tabindex', '0')\n  }\n\n  function handleTriggerKeyDown(ev: KeyboardEvent) {\n    const code = ev.code\n    if ([EVENT_CODE.up, EVENT_CODE.down].includes(code)) {\n      removeTabindex()\n      resetTabindex(menuItems.value[0])\n      menuItems.value[0].focus()\n      ev.preventDefault()\n      ev.stopPropagation()\n    } else if (code === EVENT_CODE.enter) {\n      _instance.handleClick()\n    } else if ([EVENT_CODE.tab, EVENT_CODE.esc].includes(code)) {\n      _instance.hide()\n    }\n  }\n\n  function handleItemKeyDown(ev) {\n    const code = ev.code\n    const target = ev.target\n    const currentIndex = menuItemsArray.value.indexOf(target)\n    const max = menuItemsArray.value.length - 1\n    let nextIndex\n    if ([EVENT_CODE.up, EVENT_CODE.down].includes(code)) {\n      if (code === EVENT_CODE.up) {\n        nextIndex = currentIndex !== 0 ? currentIndex - 1 : 0\n      } else {\n        nextIndex = currentIndex < max ? currentIndex + 1 : max\n      }\n      removeTabindex()\n      resetTabindex(menuItems.value[nextIndex])\n      menuItems.value[nextIndex].focus()\n      ev.preventDefault()\n      ev.stopPropagation()\n    } else if (code === EVENT_CODE.enter) {\n      triggerElmFocus()\n      target.click()\n      if (_instance.props.hideOnClick) {\n        _instance.hide()\n      }\n    } else if ([EVENT_CODE.tab, EVENT_CODE.esc].includes(code)) {\n      _instance.hide()\n      triggerElmFocus()\n    }\n  }\n\n  function initAria() {\n    dropdownElm.value.setAttribute('id', listId.value)\n    triggerElm.setAttribute('aria-haspopup', 'list')\n    triggerElm.setAttribute('aria-controls', listId.value)\n    if (!_instance.props.splitButton) {\n      triggerElm.setAttribute('role', 'button')\n      triggerElm.setAttribute('tabindex', _instance.props.tabindex)\n      addClass(triggerElm, ns.b('selfdefine'))\n    }\n  }\n\n  function initEvent() {\n    on(triggerElm, 'keydown', handleTriggerKeyDown)\n    on(dropdownElm.value, 'keydown', handleItemKeyDown, true)\n  }\n\n  function initDomOperation() {\n    menuItems.value = dropdownElm.value.querySelectorAll(\n      \"[tabindex='-1']\"\n    ) as unknown as HTMLButtonElement[]\n    menuItemsArray.value = Array.from(menuItems.value)\n\n    initEvent()\n    initAria()\n  }\n\n  function triggerElmFocus() {\n    triggerElm.focus()\n  }\n\n  initDomOperation()\n}\n","<template>\n  <el-roving-focus-collection-item\n    :id=\"id\"\n    :focusable=\"focusable\"\n    :active=\"active\"\n  >\n    <slot />\n  </el-roving-focus-collection-item>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  inject,\n  nextTick,\n  provide,\n  ref,\n  unref,\n} from 'vue'\nimport { useId } from '@element-plus/hooks'\nimport { composeEventHandlers } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport {\n  ElCollectionItem as ElRovingFocusCollectionItem,\n  ROVING_FOCUS_COLLECTION_INJECTION_KEY,\n} from './roving-focus-group'\nimport {\n  ROVING_FOCUS_GROUP_INJECTION_KEY,\n  ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY,\n} from './tokens'\nimport { focusFirst, getFocusIntent, reorderArray } from './utils'\n\nexport default defineComponent({\n  components: {\n    ElRovingFocusCollectionItem,\n  },\n  props: {\n    focusable: {\n      type: Boolean,\n      default: true,\n    },\n    active: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: ['mousedown', 'focus', 'keydown'],\n  setup(props, { emit }) {\n    const { currentTabbedId, loop, onItemFocus, onItemShiftTab } = inject(\n      ROVING_FOCUS_GROUP_INJECTION_KEY,\n      undefined\n    )!\n\n    const { getItems } = inject(\n      ROVING_FOCUS_COLLECTION_INJECTION_KEY,\n      undefined\n    )!\n\n    const id = useId()\n    const rovingFocusGroupItemRef = ref<HTMLElement | null>(null)\n\n    const handleMousedown = composeEventHandlers(\n      (e: Event) => {\n        emit('mousedown', e)\n      },\n      (e) => {\n        if (!props.focusable) {\n          e.preventDefault()\n        } else {\n          onItemFocus(unref(id))\n        }\n      }\n    )\n\n    const handleFocus = composeEventHandlers(\n      (e: Event) => {\n        emit('focus', e)\n      },\n      () => {\n        onItemFocus(unref(id))\n      }\n    )\n\n    const handleKeydown = composeEventHandlers(\n      (e: Event) => {\n        emit('keydown', e)\n      },\n      (e) => {\n        const { key, shiftKey, target, currentTarget } = e as KeyboardEvent\n        if (key === EVENT_CODE.tab && shiftKey) {\n          onItemShiftTab()\n          return\n        }\n        if (target !== currentTarget) return\n        const focusIntent = getFocusIntent(e as KeyboardEvent)\n\n        if (focusIntent) {\n          e.preventDefault()\n          const items = getItems<typeof props>().filter(\n            (item) => item.focusable\n          )\n\n          let elements = items.map((item) => item.ref!)\n\n          switch (focusIntent) {\n            case 'last': {\n              elements.reverse()\n              break\n            }\n            case 'prev':\n            case 'next': {\n              if (focusIntent === 'prev') {\n                elements.reverse()\n              }\n              const currentIdx = elements.indexOf(currentTarget as HTMLElement)\n              elements = loop.value\n                ? reorderArray(elements, currentIdx + 1)\n                : elements.slice(currentIdx + 1)\n              break\n            }\n            default: {\n              break\n            }\n          }\n\n          nextTick(() => {\n            focusFirst(elements)\n          })\n        }\n      }\n    )\n\n    const isCurrentTab = computed(() => currentTabbedId.value === unref(id))\n\n    provide(ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY, {\n      rovingFocusGroupItemRef,\n      tabIndex: computed(() => (unref(isCurrentTab) ? 0 : -1)),\n      handleMousedown,\n      handleFocus,\n      handleKeydown,\n    })\n\n    return {\n      id,\n      handleKeydown,\n      handleFocus,\n      handleMousedown,\n    }\n  },\n})\n</script>\n","<template>\n  <el-dropdown-collection-item\n    :disabled=\"disabled\"\n    :text-value=\"textValue ?? textContent\"\n  >\n    <el-roving-focus-item :focusable=\"!disabled\">\n      <el-dropdown-item-impl\n        v-bind=\"propsAndAttrs\"\n        @pointerleave=\"handlePointerLeave\"\n        @pointermove=\"handlePointerMove\"\n        @clickimpl=\"handleClick\"\n      >\n        <slot />\n      </el-dropdown-item-impl>\n    </el-roving-focus-item>\n  </el-dropdown-collection-item>\n</template>\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  ref,\n  unref,\n} from 'vue'\nimport { ElRovingFocusItem } from '@element-plus/components/roving-focus-group'\nimport { composeEventHandlers, whenMouse } from '@element-plus/utils'\nimport ElDropdownItemImpl from './dropdown-item-impl.vue'\nimport { useDropdown } from './useDropdown'\nimport {\n  ElCollectionItem as ElDropdownCollectionItem,\n  dropdownItemProps,\n} from './dropdown'\nimport { DROPDOWN_INJECTION_KEY } from './tokens'\n\nexport default defineComponent({\n  name: 'ElDropdownItem',\n  components: {\n    ElDropdownCollectionItem,\n    ElRovingFocusItem,\n    ElDropdownItemImpl,\n  },\n  inheritAttrs: false,\n  props: dropdownItemProps,\n  emits: ['pointermove', 'pointerleave', 'click'],\n  setup(props, { emit, attrs }) {\n    const { elDropdown } = useDropdown()\n    const _instance = getCurrentInstance()\n    const itemRef = ref<HTMLElement | null>(null)\n    const textContent = computed(() => unref(itemRef)?.textContent ?? '')\n    const { onItemEnter, onItemLeave } = inject(\n      DROPDOWN_INJECTION_KEY,\n      undefined\n    )!\n\n    const handlePointerMove = composeEventHandlers(\n      (e: PointerEvent) => {\n        emit('pointermove', e)\n        return e.defaultPrevented\n      },\n      whenMouse((e) => {\n        if (props.disabled) {\n          onItemLeave(e)\n        } else {\n          onItemEnter(e)\n          if (!e.defaultPrevented) {\n            ;(e.currentTarget as HTMLElement)?.focus()\n          }\n        }\n      })\n    )\n\n    const handlePointerLeave = composeEventHandlers(\n      (e: PointerEvent) => {\n        emit('pointerleave', e)\n        return e.defaultPrevented\n      },\n      whenMouse((e) => {\n        onItemLeave(e)\n      })\n    )\n\n    const handleClick = composeEventHandlers(\n      (e: PointerEvent) => {\n        emit('click', e)\n        return e.type !== 'keydown' && e.defaultPrevented\n      },\n      (e) => {\n        if (props.disabled) {\n          e.stopImmediatePropagation()\n          return\n        }\n        if (elDropdown?.hideOnClick?.value) {\n          elDropdown.handleClick?.()\n        }\n        elDropdown.commandHandler?.(props.command, _instance, e)\n      }\n    )\n\n    // direct usage of v-bind={ ...$props, ...$attrs } causes type errors\n    const propsAndAttrs = computed(() => {\n      return { ...props, ...attrs }\n    })\n\n    return {\n      handleClick,\n      handlePointerMove,\n      handlePointerLeave,\n      textContent,\n      propsAndAttrs,\n    }\n  },\n})\n</script>\n","<template>\n  <ul\n    :ref=\"dropdownListWrapperRef\"\n    :class=\"dropdownKls\"\n    :style=\"rovingFocusGroupRootStyle\"\n    :tabindex=\"-1\"\n    :role=\"role\"\n    :aria-labelledby=\"triggerId\"\n    @blur=\"onBlur\"\n    @focus=\"onFocus\"\n    @keydown=\"handleKeydown\"\n    @mousedown=\"onMousedown\"\n  >\n    <slot />\n  </ul>\n</template>\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, unref } from 'vue'\nimport { composeEventHandlers, composeRefs } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { FOCUS_TRAP_INJECTION_KEY } from '@element-plus/components/focus-trap'\nimport {\n  ROVING_FOCUS_COLLECTION_INJECTION_KEY,\n  ROVING_FOCUS_GROUP_INJECTION_KEY,\n  focusFirst,\n} from '@element-plus/components/roving-focus-group'\nimport { useNamespace } from '@element-plus/hooks'\nimport { DROPDOWN_INJECTION_KEY } from './tokens'\nimport {\n  DROPDOWN_COLLECTION_INJECTION_KEY,\n  FIRST_LAST_KEYS,\n  LAST_KEYS,\n  dropdownMenuProps,\n} from './dropdown'\nimport { useDropdown } from './useDropdown'\n\nexport default defineComponent({\n  name: 'ElDropdownMenu',\n  props: dropdownMenuProps,\n  setup(props) {\n    const ns = useNamespace('dropdown')\n    const { _elDropdownSize } = useDropdown()\n    const size = _elDropdownSize.value\n\n    const { focusTrapRef, onKeydown } = inject(\n      FOCUS_TRAP_INJECTION_KEY,\n      undefined\n    )!\n\n    const { contentRef, role, triggerId } = inject(\n      DROPDOWN_INJECTION_KEY,\n      undefined\n    )!\n\n    const { collectionRef: dropdownCollectionRef, getItems } = inject(\n      DROPDOWN_COLLECTION_INJECTION_KEY,\n      undefined\n    )!\n\n    const {\n      rovingFocusGroupRef,\n      rovingFocusGroupRootStyle,\n      tabIndex,\n      onBlur,\n      onFocus,\n      onMousedown,\n    } = inject(ROVING_FOCUS_GROUP_INJECTION_KEY, undefined)!\n\n    const { collectionRef: rovingFocusGroupCollectionRef } = inject(\n      ROVING_FOCUS_COLLECTION_INJECTION_KEY,\n      undefined\n    )!\n\n    const dropdownKls = computed(() => {\n      return [ns.b('menu'), ns.bm('menu', size?.value)]\n    })\n\n    const dropdownListWrapperRef = composeRefs(\n      contentRef,\n      dropdownCollectionRef,\n      focusTrapRef,\n      rovingFocusGroupRef,\n      rovingFocusGroupCollectionRef\n    )\n\n    const composedKeydown = composeEventHandlers(\n      (e: KeyboardEvent) => {\n        props.onKeydown?.(e)\n      },\n      (e) => {\n        const { currentTarget, code, target } = e\n        const isKeydownContained = (currentTarget as Node).contains(\n          target as Node\n        )\n\n        if (isKeydownContained) {\n          // TODO: implement typeahead search\n        }\n\n        if (EVENT_CODE.tab === code) {\n          e.stopImmediatePropagation()\n        }\n\n        e.preventDefault()\n\n        if (target !== unref(contentRef)) return\n        if (!FIRST_LAST_KEYS.includes(code)) return\n        const items = getItems<{ disabled: boolean }>().filter(\n          (item) => !item.disabled\n        )\n        const targets = items.map((item) => item.ref!)\n        if (LAST_KEYS.includes(code)) {\n          targets.reverse()\n        }\n        focusFirst(targets)\n      }\n    )\n\n    const handleKeydown = (e: KeyboardEvent) => {\n      composedKeydown(e)\n      onKeydown(e)\n    }\n\n    return {\n      size,\n      rovingFocusGroupRootStyle,\n      tabIndex,\n      dropdownKls,\n      role,\n      triggerId,\n      dropdownListWrapperRef,\n      handleKeydown,\n      onBlur,\n      onFocus,\n      onMousedown,\n    }\n  },\n})\n</script>\n","import { withInstall, withNoopInstall } from '@element-plus/utils'\n\nimport Dropdown from './src/dropdown.vue'\nimport DropdownItem from './src/dropdown-item.vue'\nimport DropdownMenu from './src/dropdown-menu.vue'\n\nexport const ElDropdown = withInstall(Dropdown, {\n  DropdownItem,\n  DropdownMenu,\n})\nexport default ElDropdown\nexport const ElDropdownItem = withNoopInstall(DropdownItem)\nexport const ElDropdownMenu = withNoopInstall(DropdownMenu)\nexport * from './src/dropdown'\nexport * from './src/tokens'\n","import { buildProps, definePropType, iconPropType } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { createCollectionWithScope } from '@element-plus/components/collection'\nimport {\n  useTooltipContentProps,\n  useTooltipTriggerProps,\n} from '@element-plus/components/tooltip'\n\nimport type { Options } from '@popperjs/core'\nimport type { ButtonProps, ButtonType } from '@element-plus/components/button'\nimport type { Placement } from '@element-plus/components/popper'\nimport type { ComponentInternalInstance, ComputedRef } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\n\nexport interface IElDropdownInstance {\n  instance?: ComponentInternalInstance\n  dropdownSize?: ComputedRef<string>\n  handleClick?: () => void\n  commandHandler?: (...arg) => void\n  show?: () => void\n  hide?: () => void\n  trigger?: ComputedRef<string>\n  hideOnClick?: ComputedRef<boolean>\n  triggerElm?: ComputedRef<Nullable<HTMLButtonElement>>\n}\n\nexport const dropdownProps = buildProps({\n  trigger: useTooltipTriggerProps.trigger,\n  effect: {\n    ...useTooltipContentProps.effect,\n    default: 'light',\n  },\n  type: {\n    type: definePropType<ButtonType>(String),\n  },\n  placement: {\n    type: definePropType<Placement>(String),\n    default: 'bottom',\n  },\n  popperOptions: {\n    type: definePropType<Partial<Options>>(Object),\n    default: () => ({}),\n  },\n  id: String,\n  size: {\n    type: String,\n    default: '',\n  },\n  splitButton: Boolean,\n  hideOnClick: {\n    type: Boolean,\n    default: true,\n  },\n  loop: {\n    type: Boolean,\n    default: true,\n  },\n  showTimeout: {\n    type: Number,\n    default: 150,\n  },\n  hideTimeout: {\n    type: Number,\n    default: 150,\n  },\n  tabindex: {\n    type: definePropType<number | string>([Number, String]),\n    default: 0,\n  },\n  maxHeight: {\n    type: definePropType<number | string>([Number, String]),\n    default: '',\n  },\n  popperClass: {\n    type: String,\n    default: '',\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  role: {\n    type: String,\n    default: 'menu',\n  },\n  buttonProps: {\n    type: definePropType<ButtonProps>(Object),\n  },\n} as const)\n\nexport const dropdownItemProps = buildProps({\n  command: {\n    type: [Object, String, Number],\n    default: () => ({}),\n  },\n  disabled: Boolean,\n  divided: Boolean,\n  textValue: String,\n  icon: {\n    type: iconPropType,\n  },\n} as const)\n\nexport const dropdownMenuProps = buildProps({\n  onKeydown: { type: definePropType<(e: KeyboardEvent) => void>(Function) },\n})\n\nexport const FIRST_KEYS = [\n  EVENT_CODE.down,\n  EVENT_CODE.pageDown,\n  EVENT_CODE.home,\n]\n\nexport const LAST_KEYS = [EVENT_CODE.up, EVENT_CODE.pageUp, EVENT_CODE.end]\n\nexport const FIRST_LAST_KEYS = [...FIRST_KEYS, ...LAST_KEYS]\n\nconst {\n  ElCollection,\n  ElCollectionItem,\n  COLLECTION_INJECTION_KEY,\n  COLLECTION_ITEM_INJECTION_KEY,\n} = createCollectionWithScope('Dropdown')\n\nexport {\n  ElCollection,\n  ElCollectionItem,\n  COLLECTION_INJECTION_KEY as DROPDOWN_COLLECTION_INJECTION_KEY,\n  COLLECTION_ITEM_INJECTION_KEY as DROPDOWN_COLLECTION_ITEM_INJECTION_KEY,\n}\n","import { isFunction } from '../types'\n\nimport type { ComponentPublicInstance, Ref } from 'vue'\n\nexport type RefSetter = (\n  el: Element | ComponentPublicInstance | undefined\n) => void\n\nexport const composeRefs = (\n  ...refs: (Ref<HTMLElement | undefined> | RefSetter)[]\n) => {\n  return (el: Element | ComponentPublicInstance | null) => {\n    refs.forEach((ref) => {\n      if (isFunction(ref)) {\n        ref(el as Element | ComponentPublicInstance)\n      } else {\n        ref.value = el as HTMLElement | undefined\n      }\n    })\n  }\n}\n"],"names":["_renderSlot","COLLECTION_ITEM_SIGN","createCollectionWithScope","name","COLLECTION_NAME","COLLECTION_ITEM_NAME","COLLECTION_INJECTION_KEY","Symbol","COLLECTION_ITEM_INJECTION_KEY","ElCollection","Collection","setup","collectionRef","ref","itemMap","Map","getItems","collectionEl","unref","orderedNodes","Array","from","querySelectorAll","items","values","sort","a","b","indexOf","provide","ElCollectionItem","CollectionItem","_","attrs","collectionItemRef","collectionInjection","inject","onMounted","collectionItemEl","set","onBeforeUnmount","delete","DROPDOWN_INJECTION_KEY","rovingFocusGroupProps","buildProps","style","type","definePropType","String","Object","currentTabId","defaultCurrentTabId","loop","Boolean","dir","default","orientation","onBlur","Function","onFocus","onMousedown","ROVING_FOCUS_GROUP_INJECTION_KEY","ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY","MAP_KEY_TO_FOCUS_INTENT","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","PageUp","Home","PageDown","End","getDirectionAwareKey","key","EVENT_CODE","getFocusIntent","event","includes","reorderArray","array","atIdx","map","idx","length","focusFirst","elements","activeElement","prevActive","document","element","focus","CURRENT_TAB_ID_CHANGE_EVT","ENTRY_FOCUS_EVT","EVT_OPTS","bubbles","cancelable","_sfc_main","defineComponent","inheritAttrs","props","emits","emit","rovingFocusGroupRef","outline","isBackingOut","_a2","isClickFocus","e","target","currentTarget","isKeyboardFocus","dispatchEvent","entryFocusEvt","item","activeItem","composeEventHandlers","args","currentTabbedId","tabIndex","rovingFocusGroupRootStyle","onItemFocus","onItemShiftTab","watch","rovingFocusGroupEl","on","components","ElFocusGroupCollection","ElRovingFocusGroupImpl","_createBlock","_createVNode","_component_el_roving_focus_group_impl","normalizeProps","_ctx","ButtonGroup","ElButtonGroup","ElButton","ElScrollbar","ElDropdownCollection","ElTooltip","ElRovingFocusGroup","ElOnlyChild","ElIcon","_instance","getCurrentInstance","ns","useNamespace","t","useLocale","triggeringElementRef","referenceElementRef","popperRef","contentRef","scrollbar","isUsingKeyboard","triggerKeys","wrapStyle","computed","maxHeight","addUnit","dropdownTriggerKls","m","dropdownSize","value","defaultTriggerId","useId","triggerId","id","handleClose","_a","useSize","contentEl","handleEntryFocus","role","onItemEnter","onItemLeave","instance","handleClick","commandHandler","trigger","hideOnClick","_b","preventScroll","handleCurrentTabIdChange","handlerMainButtonClick","handleOpen","handleShowTooltip","handleHideTooltip","onFocusAfterTrapped","_component_el_button_group","_openBlock","class","effect","placement","disabled","transition","teleported","pure","persistent","onShow","onHide","_createSlots","content","tag","onCurrentTabIdChange","onEntryFocus","splitButton","fn","_withCtx","tabindex","size","onClick","menuRole","dropdownCollectionItemRef","DROPDOWN_COLLECTION_ITEM_INJECTION_KEY","rovingFocusCollectionItemRef","ROVING_FOCUS_ITEM_COLLECTION_INJECTION_KEY","rovingFocusGroupItemRef","handleFocus","handleKeydown","handleItemKeydown","handleMousedown","itemRef","code","preventDefault","stopImmediatePropagation","dataset","bem","_createCommentVNode","_createElementVNode","_mergeProps","be","is","_cache","onKeydown","onPointermove","onPointerleave","_resolveDynamicComponent","_hoisted_1","useDropdown","elDropdown","_elDropdownSize","ElRovingFocusCollectionItem","focusable","active","shiftKey","focusIntent","filter","reverse","currentIdx","slice","nextTick","isCurrentTab","ElDropdownCollectionItem","ElRovingFocusItem","ElDropdownItemImpl","textContent","handlePointerMove","whenMouse","handlePointerLeave","_sfc_render","$props","$setup","$data","$options","focusTrapRef","FOCUS_TRAP_INJECTION_KEY","dropdownCollectionRef","DROPDOWN_COLLECTION_INJECTION_KEY","rovingFocusGroupCollectionRef","ROVING_FOCUS_COLLECTION_INJECTION_KEY","dropdownKls","bm","dropdownListWrapperRef","composeRefs","composedKeydown","isKeydownContained","targets","_normalizeClass","ElDropdown","withInstall","Dropdown","DropdownItem","DropdownMenu","ElDropdownItem","withNoopInstall","ElDropdownMenu","dropdownProps","useTooltipTriggerProps","useTooltipContentProps","popperOptions","showTimeout","Number","hideTimeout","popperClass","buttonProps","dropdownItemProps","command","divided","textValue","icon","iconPropType","dropdownMenuProps","FIRST_KEYS","LAST_KEYS","FIRST_LAST_KEYS","refs","el","forEach","isFunction"],"sourceRoot":""}